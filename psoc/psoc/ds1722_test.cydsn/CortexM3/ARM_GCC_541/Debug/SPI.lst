ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPI_EnableTxInt,"ax",%progbits
  20              		.align	2
  21              		.global	SPI_EnableTxInt
  22              		.thumb
  23              		.thumb_func
  24              		.type	SPI_EnableTxInt, %function
  25              	SPI_EnableTxInt:
  26              	.LFB4:
  27              		.file 1 "Generated_Source\\PSoC5\\SPI.c"
   1:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPI.c **** * File Name: SPI.c
   3:Generated_Source\PSoC5/SPI.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPI.c **** *
   5:Generated_Source\PSoC5/SPI.c **** * Description:
   6:Generated_Source\PSoC5/SPI.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC5/SPI.c **** *
   8:Generated_Source\PSoC5/SPI.c **** * Note:
   9:Generated_Source\PSoC5/SPI.c **** *  None.
  10:Generated_Source\PSoC5/SPI.c **** *
  11:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
  12:Generated_Source\PSoC5/SPI.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/SPI.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/SPI.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/SPI.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/SPI.c **** 
  18:Generated_Source\PSoC5/SPI.c **** #include "SPI_PVT.h"
  19:Generated_Source\PSoC5/SPI.c **** 
  20:Generated_Source\PSoC5/SPI.c **** #if(SPI_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_txBuffer[SPI_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_txBufferFull;
  23:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_txBufferRead;
  24:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_txBufferWrite;
  25:Generated_Source\PSoC5/SPI.c **** #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC5/SPI.c **** 
  27:Generated_Source\PSoC5/SPI.c **** #if(SPI_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_rxBuffer[SPI_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_rxBufferFull;
  30:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_rxBufferRead;
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 2


  31:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_rxBufferWrite;
  32:Generated_Source\PSoC5/SPI.c **** #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC5/SPI.c **** 
  34:Generated_Source\PSoC5/SPI.c **** uint8 SPI_initVar = 0u;
  35:Generated_Source\PSoC5/SPI.c **** 
  36:Generated_Source\PSoC5/SPI.c **** volatile uint8 SPI_swStatusTx;
  37:Generated_Source\PSoC5/SPI.c **** volatile uint8 SPI_swStatusRx;
  38:Generated_Source\PSoC5/SPI.c **** 
  39:Generated_Source\PSoC5/SPI.c **** 
  40:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_Init
  42:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
  43:Generated_Source\PSoC5/SPI.c **** *
  44:Generated_Source\PSoC5/SPI.c **** * Summary:
  45:Generated_Source\PSoC5/SPI.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC5/SPI.c **** *
  47:Generated_Source\PSoC5/SPI.c **** * Parameters:
  48:Generated_Source\PSoC5/SPI.c **** *  None.
  49:Generated_Source\PSoC5/SPI.c **** *
  50:Generated_Source\PSoC5/SPI.c **** * Return:
  51:Generated_Source\PSoC5/SPI.c **** *  None.
  52:Generated_Source\PSoC5/SPI.c **** *
  53:Generated_Source\PSoC5/SPI.c **** * Side Effects:
  54:Generated_Source\PSoC5/SPI.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC5/SPI.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC5/SPI.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC5/SPI.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC5/SPI.c **** *
  59:Generated_Source\PSoC5/SPI.c **** * Reentrant:
  60:Generated_Source\PSoC5/SPI.c **** *  No.
  61:Generated_Source\PSoC5/SPI.c **** *
  62:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
  63:Generated_Source\PSoC5/SPI.c **** void SPI_Init(void) 
  64:Generated_Source\PSoC5/SPI.c **** {
  65:Generated_Source\PSoC5/SPI.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC5/SPI.c ****     SPI_COUNTER_PERIOD_REG = SPI_BITCTR_INIT;
  67:Generated_Source\PSoC5/SPI.c **** 
  68:Generated_Source\PSoC5/SPI.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC5/SPI.c ****         CyIntDisable         (SPI_TX_ISR_NUMBER);
  71:Generated_Source\PSoC5/SPI.c ****         CyIntSetPriority     (SPI_TX_ISR_NUMBER,  SPI_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC5/SPI.c ****         (void) CyIntSetVector(SPI_TX_ISR_NUMBER, &SPI_TX_ISR);
  73:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC5/SPI.c **** 
  75:Generated_Source\PSoC5/SPI.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC5/SPI.c ****         CyIntDisable         (SPI_RX_ISR_NUMBER);
  78:Generated_Source\PSoC5/SPI.c ****         CyIntSetPriority     (SPI_RX_ISR_NUMBER,  SPI_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC5/SPI.c ****         (void) CyIntSetVector(SPI_RX_ISR_NUMBER, &SPI_RX_ISR);
  80:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC5/SPI.c **** 
  82:Generated_Source\PSoC5/SPI.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC5/SPI.c ****     SPI_ClearFIFO();
  84:Generated_Source\PSoC5/SPI.c **** 
  85:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferFull  = 0u;
  87:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferRead  = 0u;
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 3


  88:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferWrite = 0u;
  89:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC5/SPI.c **** 
  91:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferFull  = 0u;
  93:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferRead  = 0u;
  94:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferWrite = 0u;
  95:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC5/SPI.c **** 
  97:Generated_Source\PSoC5/SPI.c ****     (void) SPI_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  98:Generated_Source\PSoC5/SPI.c ****     (void) SPI_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  99:Generated_Source\PSoC5/SPI.c **** 
 100:Generated_Source\PSoC5/SPI.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_MASK_REG = SPI_TX_INIT_INTERRUPTS_MASK;
 102:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_MASK_REG = SPI_RX_INIT_INTERRUPTS_MASK;
 103:Generated_Source\PSoC5/SPI.c **** }
 104:Generated_Source\PSoC5/SPI.c **** 
 105:Generated_Source\PSoC5/SPI.c **** 
 106:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 107:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_Enable
 108:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 109:Generated_Source\PSoC5/SPI.c **** *
 110:Generated_Source\PSoC5/SPI.c **** * Summary:
 111:Generated_Source\PSoC5/SPI.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC5/SPI.c **** *
 113:Generated_Source\PSoC5/SPI.c **** * Parameters:
 114:Generated_Source\PSoC5/SPI.c **** *  None.
 115:Generated_Source\PSoC5/SPI.c **** *
 116:Generated_Source\PSoC5/SPI.c **** * Return:
 117:Generated_Source\PSoC5/SPI.c **** *  None.
 118:Generated_Source\PSoC5/SPI.c **** *
 119:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 120:Generated_Source\PSoC5/SPI.c **** void SPI_Enable(void) 
 121:Generated_Source\PSoC5/SPI.c **** {
 122:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC5/SPI.c **** 
 124:Generated_Source\PSoC5/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 125:Generated_Source\PSoC5/SPI.c ****     SPI_COUNTER_CONTROL_REG |= SPI_CNTR_ENABLE;
 126:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_ACTL_REG  |= SPI_INT_ENABLE;
 127:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_ACTL_REG  |= SPI_INT_ENABLE;
 128:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 129:Generated_Source\PSoC5/SPI.c **** 
 130:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_CLOCK)
 131:Generated_Source\PSoC5/SPI.c ****         SPI_IntClock_Enable();
 132:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC5/SPI.c **** 
 134:Generated_Source\PSoC5/SPI.c ****     SPI_EnableTxInt();
 135:Generated_Source\PSoC5/SPI.c ****     SPI_EnableRxInt();
 136:Generated_Source\PSoC5/SPI.c **** }
 137:Generated_Source\PSoC5/SPI.c **** 
 138:Generated_Source\PSoC5/SPI.c **** 
 139:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 140:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_Start
 141:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 142:Generated_Source\PSoC5/SPI.c **** *
 143:Generated_Source\PSoC5/SPI.c **** * Summary:
 144:Generated_Source\PSoC5/SPI.c **** *  Initialize and Enable the SPI Master component.
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 4


 145:Generated_Source\PSoC5/SPI.c **** *
 146:Generated_Source\PSoC5/SPI.c **** * Parameters:
 147:Generated_Source\PSoC5/SPI.c **** *  None.
 148:Generated_Source\PSoC5/SPI.c **** *
 149:Generated_Source\PSoC5/SPI.c **** * Return:
 150:Generated_Source\PSoC5/SPI.c **** *  None.
 151:Generated_Source\PSoC5/SPI.c **** *
 152:Generated_Source\PSoC5/SPI.c **** * Global variables:
 153:Generated_Source\PSoC5/SPI.c **** *  SPI_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC5/SPI.c **** *  first function call.
 155:Generated_Source\PSoC5/SPI.c **** *
 156:Generated_Source\PSoC5/SPI.c **** * Theory:
 157:Generated_Source\PSoC5/SPI.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC5/SPI.c **** *
 159:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 160:Generated_Source\PSoC5/SPI.c **** *  No.
 161:Generated_Source\PSoC5/SPI.c **** *
 162:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 163:Generated_Source\PSoC5/SPI.c **** void SPI_Start(void) 
 164:Generated_Source\PSoC5/SPI.c **** {
 165:Generated_Source\PSoC5/SPI.c ****     if(0u == SPI_initVar)
 166:Generated_Source\PSoC5/SPI.c ****     {
 167:Generated_Source\PSoC5/SPI.c ****         SPI_Init();
 168:Generated_Source\PSoC5/SPI.c ****         SPI_initVar = 1u;
 169:Generated_Source\PSoC5/SPI.c ****     }
 170:Generated_Source\PSoC5/SPI.c **** 
 171:Generated_Source\PSoC5/SPI.c ****     SPI_Enable();
 172:Generated_Source\PSoC5/SPI.c **** }
 173:Generated_Source\PSoC5/SPI.c **** 
 174:Generated_Source\PSoC5/SPI.c **** 
 175:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_Stop
 177:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 178:Generated_Source\PSoC5/SPI.c **** *
 179:Generated_Source\PSoC5/SPI.c **** * Summary:
 180:Generated_Source\PSoC5/SPI.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC5/SPI.c **** *
 182:Generated_Source\PSoC5/SPI.c **** * Parameters:
 183:Generated_Source\PSoC5/SPI.c **** *  None.
 184:Generated_Source\PSoC5/SPI.c **** *
 185:Generated_Source\PSoC5/SPI.c **** * Return:
 186:Generated_Source\PSoC5/SPI.c **** *  None.
 187:Generated_Source\PSoC5/SPI.c **** *
 188:Generated_Source\PSoC5/SPI.c **** * Theory:
 189:Generated_Source\PSoC5/SPI.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC5/SPI.c **** *
 191:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 192:Generated_Source\PSoC5/SPI.c **** void SPI_Stop(void) 
 193:Generated_Source\PSoC5/SPI.c **** {
 194:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC5/SPI.c **** 
 196:Generated_Source\PSoC5/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 197:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_ACTL_REG &= ((uint8) ~SPI_INT_ENABLE);
 198:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_ACTL_REG &= ((uint8) ~SPI_INT_ENABLE);
 199:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 200:Generated_Source\PSoC5/SPI.c **** 
 201:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_CLOCK)
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 5


 202:Generated_Source\PSoC5/SPI.c ****         SPI_IntClock_Disable();
 203:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC5/SPI.c **** 
 205:Generated_Source\PSoC5/SPI.c ****     SPI_DisableTxInt();
 206:Generated_Source\PSoC5/SPI.c ****     SPI_DisableRxInt();
 207:Generated_Source\PSoC5/SPI.c **** }
 208:Generated_Source\PSoC5/SPI.c **** 
 209:Generated_Source\PSoC5/SPI.c **** 
 210:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_EnableTxInt
 212:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 213:Generated_Source\PSoC5/SPI.c **** *
 214:Generated_Source\PSoC5/SPI.c **** * Summary:
 215:Generated_Source\PSoC5/SPI.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC5/SPI.c **** *
 217:Generated_Source\PSoC5/SPI.c **** * Parameters:
 218:Generated_Source\PSoC5/SPI.c **** *  None.
 219:Generated_Source\PSoC5/SPI.c **** *
 220:Generated_Source\PSoC5/SPI.c **** * Return:
 221:Generated_Source\PSoC5/SPI.c **** *  None.
 222:Generated_Source\PSoC5/SPI.c **** *
 223:Generated_Source\PSoC5/SPI.c **** * Theory:
 224:Generated_Source\PSoC5/SPI.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC5/SPI.c **** *
 226:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 227:Generated_Source\PSoC5/SPI.c **** void SPI_EnableTxInt(void) 
 228:Generated_Source\PSoC5/SPI.c **** {
  28              		.loc 1 228 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 229:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC5/SPI.c ****         CyIntEnable(SPI_TX_ISR_NUMBER);
  33              		.loc 1 230 0
  34 0000 0222     		movs	r2, #2
  35 0002 014B     		ldr	r3, .L2
  36 0004 1A60     		str	r2, [r3]
  37 0006 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 0008 00E100E0 		.word	-536813312
  42              		.cfi_endproc
  43              	.LFE4:
  44              		.size	SPI_EnableTxInt, .-SPI_EnableTxInt
  45              		.section	.text.SPI_EnableRxInt,"ax",%progbits
  46              		.align	2
  47              		.global	SPI_EnableRxInt
  48              		.thumb
  49              		.thumb_func
  50              		.type	SPI_EnableRxInt, %function
  51              	SPI_EnableRxInt:
  52              	.LFB5:
 231:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC5/SPI.c **** }
 233:Generated_Source\PSoC5/SPI.c **** 
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 6


 234:Generated_Source\PSoC5/SPI.c **** 
 235:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 236:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_EnableRxInt
 237:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 238:Generated_Source\PSoC5/SPI.c **** *
 239:Generated_Source\PSoC5/SPI.c **** * Summary:
 240:Generated_Source\PSoC5/SPI.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC5/SPI.c **** *
 242:Generated_Source\PSoC5/SPI.c **** * Parameters:
 243:Generated_Source\PSoC5/SPI.c **** *  None.
 244:Generated_Source\PSoC5/SPI.c **** *
 245:Generated_Source\PSoC5/SPI.c **** * Return:
 246:Generated_Source\PSoC5/SPI.c **** *  None.
 247:Generated_Source\PSoC5/SPI.c **** *
 248:Generated_Source\PSoC5/SPI.c **** * Theory:
 249:Generated_Source\PSoC5/SPI.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC5/SPI.c **** *
 251:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 252:Generated_Source\PSoC5/SPI.c **** void SPI_EnableRxInt(void) 
 253:Generated_Source\PSoC5/SPI.c **** {
  53              		.loc 1 253 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 254:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC5/SPI.c ****         CyIntEnable(SPI_RX_ISR_NUMBER);
  58              		.loc 1 255 0
  59 0000 0122     		movs	r2, #1
  60 0002 014B     		ldr	r3, .L5
  61 0004 1A60     		str	r2, [r3]
  62 0006 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 0008 00E100E0 		.word	-536813312
  67              		.cfi_endproc
  68              	.LFE5:
  69              		.size	SPI_EnableRxInt, .-SPI_EnableRxInt
  70              		.section	.text.SPI_Enable,"ax",%progbits
  71              		.align	2
  72              		.global	SPI_Enable
  73              		.thumb
  74              		.thumb_func
  75              		.type	SPI_Enable, %function
  76              	SPI_Enable:
  77              	.LFB1:
 121:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
  78              		.loc 1 121 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82 0000 08B5     		push	{r3, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
 124:Generated_Source\PSoC5/SPI.c ****     SPI_COUNTER_CONTROL_REG |= SPI_CNTR_ENABLE;
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 7


  86              		.loc 1 124 0
  87 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  88              	.LVL0:
 125:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_ACTL_REG  |= SPI_INT_ENABLE;
  89              		.loc 1 125 0
  90 0006 0D4A     		ldr	r2, .L9
  91 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  92 000a 43F02003 		orr	r3, r3, #32
  93 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_ACTL_REG  |= SPI_INT_ENABLE;
  94              		.loc 1 126 0
  95 0010 02F20712 		addw	r2, r2, #263
  96 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  97 0016 43F01003 		orr	r3, r3, #16
  98 001a 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
  99              		.loc 1 127 0
 100 001c A2F58372 		sub	r2, r2, #262
 101 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 102 0022 43F01003 		orr	r3, r3, #16
 103 0026 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC5/SPI.c **** 
 104              		.loc 1 128 0
 105 0028 FFF7FEFF 		bl	CyExitCriticalSection
 106              	.LVL1:
 131:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_CLOCK) */
 107              		.loc 1 131 0
 108 002c FFF7FEFF 		bl	SPI_IntClock_Start
 109              	.LVL2:
 134:Generated_Source\PSoC5/SPI.c ****     SPI_EnableRxInt();
 110              		.loc 1 134 0
 111 0030 FFF7FEFF 		bl	SPI_EnableTxInt
 112              	.LVL3:
 135:Generated_Source\PSoC5/SPI.c **** }
 113              		.loc 1 135 0
 114 0034 FFF7FEFF 		bl	SPI_EnableRxInt
 115              	.LVL4:
 116 0038 08BD     		pop	{r3, pc}
 117              	.L10:
 118 003a 00BF     		.align	2
 119              	.L9:
 120 003c 94640040 		.word	1073767572
 121              		.cfi_endproc
 122              	.LFE1:
 123              		.size	SPI_Enable, .-SPI_Enable
 124              		.section	.text.SPI_DisableTxInt,"ax",%progbits
 125              		.align	2
 126              		.global	SPI_DisableTxInt
 127              		.thumb
 128              		.thumb_func
 129              		.type	SPI_DisableTxInt, %function
 130              	SPI_DisableTxInt:
 131              	.LFB6:
 256:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC5/SPI.c **** }
 258:Generated_Source\PSoC5/SPI.c **** 
 259:Generated_Source\PSoC5/SPI.c **** 
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 8


 260:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 261:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_DisableTxInt
 262:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 263:Generated_Source\PSoC5/SPI.c **** *
 264:Generated_Source\PSoC5/SPI.c **** * Summary:
 265:Generated_Source\PSoC5/SPI.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC5/SPI.c **** *
 267:Generated_Source\PSoC5/SPI.c **** * Parameters:
 268:Generated_Source\PSoC5/SPI.c **** *  None.
 269:Generated_Source\PSoC5/SPI.c **** *
 270:Generated_Source\PSoC5/SPI.c **** * Return:
 271:Generated_Source\PSoC5/SPI.c **** *  None.
 272:Generated_Source\PSoC5/SPI.c **** *
 273:Generated_Source\PSoC5/SPI.c **** * Theory:
 274:Generated_Source\PSoC5/SPI.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC5/SPI.c **** *
 276:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 277:Generated_Source\PSoC5/SPI.c **** void SPI_DisableTxInt(void) 
 278:Generated_Source\PSoC5/SPI.c **** {
 132              		.loc 1 278 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 279:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC5/SPI.c ****         CyIntDisable(SPI_TX_ISR_NUMBER);
 137              		.loc 1 280 0
 138 0000 0222     		movs	r2, #2
 139 0002 014B     		ldr	r3, .L12
 140 0004 1A60     		str	r2, [r3]
 141 0006 7047     		bx	lr
 142              	.L13:
 143              		.align	2
 144              	.L12:
 145 0008 80E100E0 		.word	-536813184
 146              		.cfi_endproc
 147              	.LFE6:
 148              		.size	SPI_DisableTxInt, .-SPI_DisableTxInt
 149              		.section	.text.SPI_DisableRxInt,"ax",%progbits
 150              		.align	2
 151              		.global	SPI_DisableRxInt
 152              		.thumb
 153              		.thumb_func
 154              		.type	SPI_DisableRxInt, %function
 155              	SPI_DisableRxInt:
 156              	.LFB7:
 281:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC5/SPI.c **** }
 283:Generated_Source\PSoC5/SPI.c **** 
 284:Generated_Source\PSoC5/SPI.c **** 
 285:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_DisableRxInt
 287:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 288:Generated_Source\PSoC5/SPI.c **** *
 289:Generated_Source\PSoC5/SPI.c **** * Summary:
 290:Generated_Source\PSoC5/SPI.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC5/SPI.c **** *
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 9


 292:Generated_Source\PSoC5/SPI.c **** * Parameters:
 293:Generated_Source\PSoC5/SPI.c **** *  None.
 294:Generated_Source\PSoC5/SPI.c **** *
 295:Generated_Source\PSoC5/SPI.c **** * Return:
 296:Generated_Source\PSoC5/SPI.c **** *  None.
 297:Generated_Source\PSoC5/SPI.c **** *
 298:Generated_Source\PSoC5/SPI.c **** * Theory:
 299:Generated_Source\PSoC5/SPI.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC5/SPI.c **** *
 301:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/SPI.c **** void SPI_DisableRxInt(void) 
 303:Generated_Source\PSoC5/SPI.c **** {
 157              		.loc 1 303 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 304:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC5/SPI.c ****         CyIntDisable(SPI_RX_ISR_NUMBER);
 162              		.loc 1 305 0
 163 0000 0122     		movs	r2, #1
 164 0002 014B     		ldr	r3, .L15
 165 0004 1A60     		str	r2, [r3]
 166 0006 7047     		bx	lr
 167              	.L16:
 168              		.align	2
 169              	.L15:
 170 0008 80E100E0 		.word	-536813184
 171              		.cfi_endproc
 172              	.LFE7:
 173              		.size	SPI_DisableRxInt, .-SPI_DisableRxInt
 174              		.section	.text.SPI_Stop,"ax",%progbits
 175              		.align	2
 176              		.global	SPI_Stop
 177              		.thumb
 178              		.thumb_func
 179              		.type	SPI_Stop, %function
 180              	SPI_Stop:
 181              	.LFB3:
 193:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
 182              		.loc 1 193 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186 0000 08B5     		push	{r3, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 3, -8
 189              		.cfi_offset 14, -4
 196:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_ACTL_REG &= ((uint8) ~SPI_INT_ENABLE);
 190              		.loc 1 196 0
 191 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 192              	.LVL5:
 197:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_ACTL_REG &= ((uint8) ~SPI_INT_ENABLE);
 193              		.loc 1 197 0
 194 0006 0A4A     		ldr	r2, .L19
 195 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 196 000a 03F0EF03 		and	r3, r3, #239
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 10


 197 000e 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 198              		.loc 1 198 0
 199 0010 A2F58372 		sub	r2, r2, #262
 200 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 201 0016 03F0EF03 		and	r3, r3, #239
 202 001a 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/SPI.c **** 
 203              		.loc 1 199 0
 204 001c FFF7FEFF 		bl	CyExitCriticalSection
 205              	.LVL6:
 202:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_CLOCK) */
 206              		.loc 1 202 0
 207 0020 FFF7FEFF 		bl	SPI_IntClock_Stop
 208              	.LVL7:
 205:Generated_Source\PSoC5/SPI.c ****     SPI_DisableRxInt();
 209              		.loc 1 205 0
 210 0024 FFF7FEFF 		bl	SPI_DisableTxInt
 211              	.LVL8:
 206:Generated_Source\PSoC5/SPI.c **** }
 212              		.loc 1 206 0
 213 0028 FFF7FEFF 		bl	SPI_DisableRxInt
 214              	.LVL9:
 215 002c 08BD     		pop	{r3, pc}
 216              	.L20:
 217 002e 00BF     		.align	2
 218              	.L19:
 219 0030 9B650040 		.word	1073767835
 220              		.cfi_endproc
 221              	.LFE3:
 222              		.size	SPI_Stop, .-SPI_Stop
 223              		.section	.text.SPI_SetTxInterruptMode,"ax",%progbits
 224              		.align	2
 225              		.global	SPI_SetTxInterruptMode
 226              		.thumb
 227              		.thumb_func
 228              		.type	SPI_SetTxInterruptMode, %function
 229              	SPI_SetTxInterruptMode:
 230              	.LFB8:
 306:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC5/SPI.c **** }
 308:Generated_Source\PSoC5/SPI.c **** 
 309:Generated_Source\PSoC5/SPI.c **** 
 310:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 311:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_SetTxInterruptMode
 312:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 313:Generated_Source\PSoC5/SPI.c **** *
 314:Generated_Source\PSoC5/SPI.c **** * Summary:
 315:Generated_Source\PSoC5/SPI.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC5/SPI.c **** *
 317:Generated_Source\PSoC5/SPI.c **** * Parameters:
 318:Generated_Source\PSoC5/SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC5/SPI.c **** *  header file).
 320:Generated_Source\PSoC5/SPI.c **** *
 321:Generated_Source\PSoC5/SPI.c **** * Return:
 322:Generated_Source\PSoC5/SPI.c **** *  None.
 323:Generated_Source\PSoC5/SPI.c **** *
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 11


 324:Generated_Source\PSoC5/SPI.c **** * Theory:
 325:Generated_Source\PSoC5/SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC5/SPI.c **** *
 327:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/SPI.c **** void SPI_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC5/SPI.c **** {
 231              		.loc 1 329 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL10:
 330:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_MASK_REG = intSrc;
 237              		.loc 1 330 0
 238 0000 014B     		ldr	r3, .L22
 239 0002 1870     		strb	r0, [r3]
 240 0004 7047     		bx	lr
 241              	.L23:
 242 0006 00BF     		.align	2
 243              	.L22:
 244 0008 8B650040 		.word	1073767819
 245              		.cfi_endproc
 246              	.LFE8:
 247              		.size	SPI_SetTxInterruptMode, .-SPI_SetTxInterruptMode
 248              		.section	.text.SPI_SetRxInterruptMode,"ax",%progbits
 249              		.align	2
 250              		.global	SPI_SetRxInterruptMode
 251              		.thumb
 252              		.thumb_func
 253              		.type	SPI_SetRxInterruptMode, %function
 254              	SPI_SetRxInterruptMode:
 255              	.LFB9:
 331:Generated_Source\PSoC5/SPI.c **** }
 332:Generated_Source\PSoC5/SPI.c **** 
 333:Generated_Source\PSoC5/SPI.c **** 
 334:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 335:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_SetRxInterruptMode
 336:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 337:Generated_Source\PSoC5/SPI.c **** *
 338:Generated_Source\PSoC5/SPI.c **** * Summary:
 339:Generated_Source\PSoC5/SPI.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC5/SPI.c **** *
 341:Generated_Source\PSoC5/SPI.c **** * Parameters:
 342:Generated_Source\PSoC5/SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC5/SPI.c **** *  header file).
 344:Generated_Source\PSoC5/SPI.c **** *
 345:Generated_Source\PSoC5/SPI.c **** * Return:
 346:Generated_Source\PSoC5/SPI.c **** *  None.
 347:Generated_Source\PSoC5/SPI.c **** *
 348:Generated_Source\PSoC5/SPI.c **** * Theory:
 349:Generated_Source\PSoC5/SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC5/SPI.c **** *
 351:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 352:Generated_Source\PSoC5/SPI.c **** void SPI_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC5/SPI.c **** {
 256              		.loc 1 353 0
 257              		.cfi_startproc
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 12


 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261              	.LVL11:
 354:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_MASK_REG  = intSrc;
 262              		.loc 1 354 0
 263 0000 014B     		ldr	r3, .L25
 264 0002 1870     		strb	r0, [r3]
 265 0004 7047     		bx	lr
 266              	.L26:
 267 0006 00BF     		.align	2
 268              	.L25:
 269 0008 85640040 		.word	1073767557
 270              		.cfi_endproc
 271              	.LFE9:
 272              		.size	SPI_SetRxInterruptMode, .-SPI_SetRxInterruptMode
 273              		.section	.text.SPI_ReadTxStatus,"ax",%progbits
 274              		.align	2
 275              		.global	SPI_ReadTxStatus
 276              		.thumb
 277              		.thumb_func
 278              		.type	SPI_ReadTxStatus, %function
 279              	SPI_ReadTxStatus:
 280              	.LFB10:
 355:Generated_Source\PSoC5/SPI.c **** }
 356:Generated_Source\PSoC5/SPI.c **** 
 357:Generated_Source\PSoC5/SPI.c **** 
 358:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 359:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ReadTxStatus
 360:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 361:Generated_Source\PSoC5/SPI.c **** *
 362:Generated_Source\PSoC5/SPI.c **** * Summary:
 363:Generated_Source\PSoC5/SPI.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC5/SPI.c **** *
 365:Generated_Source\PSoC5/SPI.c **** * Parameters:
 366:Generated_Source\PSoC5/SPI.c **** *  None.
 367:Generated_Source\PSoC5/SPI.c **** *
 368:Generated_Source\PSoC5/SPI.c **** * Return:
 369:Generated_Source\PSoC5/SPI.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC5/SPI.c **** *
 371:Generated_Source\PSoC5/SPI.c **** * Global variables:
 372:Generated_Source\PSoC5/SPI.c **** *  SPI_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC5/SPI.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC5/SPI.c **** *
 375:Generated_Source\PSoC5/SPI.c **** * Theory:
 376:Generated_Source\PSoC5/SPI.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC5/SPI.c **** *  detection and flow control.
 378:Generated_Source\PSoC5/SPI.c **** *
 379:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 380:Generated_Source\PSoC5/SPI.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC5/SPI.c **** *
 382:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 383:Generated_Source\PSoC5/SPI.c **** *  No.
 384:Generated_Source\PSoC5/SPI.c **** *
 385:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 386:Generated_Source\PSoC5/SPI.c **** uint8 SPI_ReadTxStatus(void) 
 387:Generated_Source\PSoC5/SPI.c **** {
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 13


 281              		.loc 1 387 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 388:Generated_Source\PSoC5/SPI.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC5/SPI.c **** 
 390:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC5/SPI.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC5/SPI.c ****         SPI_DisableTxInt();
 393:Generated_Source\PSoC5/SPI.c **** 
 394:Generated_Source\PSoC5/SPI.c ****         tmpStatus = SPI_GET_STATUS_TX(SPI_swStatusTx);
 395:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusTx = 0u;
 396:Generated_Source\PSoC5/SPI.c **** 
 397:Generated_Source\PSoC5/SPI.c ****         SPI_EnableTxInt();
 398:Generated_Source\PSoC5/SPI.c **** 
 399:Generated_Source\PSoC5/SPI.c ****     #else
 400:Generated_Source\PSoC5/SPI.c **** 
 401:Generated_Source\PSoC5/SPI.c ****         tmpStatus = SPI_TX_STATUS_REG;
 286              		.loc 1 401 0
 287 0000 014B     		ldr	r3, .L28
 288 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 289              	.LVL12:
 402:Generated_Source\PSoC5/SPI.c **** 
 403:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC5/SPI.c **** 
 405:Generated_Source\PSoC5/SPI.c ****     return(tmpStatus);
 406:Generated_Source\PSoC5/SPI.c **** }
 290              		.loc 1 406 0
 291 0004 7047     		bx	lr
 292              	.L29:
 293 0006 00BF     		.align	2
 294              	.L28:
 295 0008 6B650040 		.word	1073767787
 296              		.cfi_endproc
 297              	.LFE10:
 298              		.size	SPI_ReadTxStatus, .-SPI_ReadTxStatus
 299              		.section	.text.SPI_ReadRxStatus,"ax",%progbits
 300              		.align	2
 301              		.global	SPI_ReadRxStatus
 302              		.thumb
 303              		.thumb_func
 304              		.type	SPI_ReadRxStatus, %function
 305              	SPI_ReadRxStatus:
 306              	.LFB11:
 407:Generated_Source\PSoC5/SPI.c **** 
 408:Generated_Source\PSoC5/SPI.c **** 
 409:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 410:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ReadRxStatus
 411:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 412:Generated_Source\PSoC5/SPI.c **** *
 413:Generated_Source\PSoC5/SPI.c **** * Summary:
 414:Generated_Source\PSoC5/SPI.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC5/SPI.c **** *
 416:Generated_Source\PSoC5/SPI.c **** * Parameters:
 417:Generated_Source\PSoC5/SPI.c **** *  None.
 418:Generated_Source\PSoC5/SPI.c **** *
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 14


 419:Generated_Source\PSoC5/SPI.c **** * Return:
 420:Generated_Source\PSoC5/SPI.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC5/SPI.c **** *
 422:Generated_Source\PSoC5/SPI.c **** * Global variables:
 423:Generated_Source\PSoC5/SPI.c **** *  SPI_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC5/SPI.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC5/SPI.c **** *
 426:Generated_Source\PSoC5/SPI.c **** * Theory:
 427:Generated_Source\PSoC5/SPI.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC5/SPI.c **** *  detection and flow control.
 429:Generated_Source\PSoC5/SPI.c **** *
 430:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 431:Generated_Source\PSoC5/SPI.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC5/SPI.c **** *
 433:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 434:Generated_Source\PSoC5/SPI.c **** *  No.
 435:Generated_Source\PSoC5/SPI.c **** *
 436:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 437:Generated_Source\PSoC5/SPI.c **** uint8 SPI_ReadRxStatus(void) 
 438:Generated_Source\PSoC5/SPI.c **** {
 307              		.loc 1 438 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 439:Generated_Source\PSoC5/SPI.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC5/SPI.c **** 
 441:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC5/SPI.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC5/SPI.c ****         SPI_DisableRxInt();
 444:Generated_Source\PSoC5/SPI.c **** 
 445:Generated_Source\PSoC5/SPI.c ****         tmpStatus = SPI_GET_STATUS_RX(SPI_swStatusRx);
 446:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusRx = 0u;
 447:Generated_Source\PSoC5/SPI.c **** 
 448:Generated_Source\PSoC5/SPI.c ****         SPI_EnableRxInt();
 449:Generated_Source\PSoC5/SPI.c **** 
 450:Generated_Source\PSoC5/SPI.c ****     #else
 451:Generated_Source\PSoC5/SPI.c **** 
 452:Generated_Source\PSoC5/SPI.c ****         tmpStatus = SPI_RX_STATUS_REG;
 312              		.loc 1 452 0
 313 0000 014B     		ldr	r3, .L31
 314 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 315              	.LVL13:
 453:Generated_Source\PSoC5/SPI.c **** 
 454:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC5/SPI.c **** 
 456:Generated_Source\PSoC5/SPI.c ****     return(tmpStatus);
 457:Generated_Source\PSoC5/SPI.c **** }
 316              		.loc 1 457 0
 317 0004 7047     		bx	lr
 318              	.L32:
 319 0006 00BF     		.align	2
 320              	.L31:
 321 0008 65640040 		.word	1073767525
 322              		.cfi_endproc
 323              	.LFE11:
 324              		.size	SPI_ReadRxStatus, .-SPI_ReadRxStatus
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 15


 325              		.section	.text.SPI_WriteTxData,"ax",%progbits
 326              		.align	2
 327              		.global	SPI_WriteTxData
 328              		.thumb
 329              		.thumb_func
 330              		.type	SPI_WriteTxData, %function
 331              	SPI_WriteTxData:
 332              	.LFB12:
 458:Generated_Source\PSoC5/SPI.c **** 
 459:Generated_Source\PSoC5/SPI.c **** 
 460:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 461:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_WriteTxData
 462:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 463:Generated_Source\PSoC5/SPI.c **** *
 464:Generated_Source\PSoC5/SPI.c **** * Summary:
 465:Generated_Source\PSoC5/SPI.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC5/SPI.c **** *
 467:Generated_Source\PSoC5/SPI.c **** * Parameters:
 468:Generated_Source\PSoC5/SPI.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC5/SPI.c **** *
 470:Generated_Source\PSoC5/SPI.c **** * Return:
 471:Generated_Source\PSoC5/SPI.c **** *  None.
 472:Generated_Source\PSoC5/SPI.c **** *
 473:Generated_Source\PSoC5/SPI.c **** * Global variables:
 474:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC5/SPI.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC5/SPI.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC5/SPI.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC5/SPI.c **** *  SPI_txBuffer[SPI_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC5/SPI.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC5/SPI.c **** *
 482:Generated_Source\PSoC5/SPI.c **** * Theory:
 483:Generated_Source\PSoC5/SPI.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC5/SPI.c **** *
 485:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 486:Generated_Source\PSoC5/SPI.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC5/SPI.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC5/SPI.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC5/SPI.c **** *
 490:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 491:Generated_Source\PSoC5/SPI.c **** *  No.
 492:Generated_Source\PSoC5/SPI.c **** *
 493:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 494:Generated_Source\PSoC5/SPI.c **** void SPI_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC5/SPI.c **** {
 333              		.loc 1 495 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338              	.LVL14:
 339              	.L34:
 496:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC5/SPI.c **** 
 498:Generated_Source\PSoC5/SPI.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC5/SPI.c ****         uint8 tmpTxBufferRead;
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 16


 500:Generated_Source\PSoC5/SPI.c **** 
 501:Generated_Source\PSoC5/SPI.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC5/SPI.c ****         do
 503:Generated_Source\PSoC5/SPI.c ****         {
 504:Generated_Source\PSoC5/SPI.c ****             tmpTxBufferRead = SPI_txBufferRead;
 505:Generated_Source\PSoC5/SPI.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC5/SPI.c ****             {
 507:Generated_Source\PSoC5/SPI.c ****                 tmpTxBufferRead = (SPI_TX_BUFFER_SIZE - 1u);
 508:Generated_Source\PSoC5/SPI.c ****             }
 509:Generated_Source\PSoC5/SPI.c ****             else
 510:Generated_Source\PSoC5/SPI.c ****             {
 511:Generated_Source\PSoC5/SPI.c ****                 tmpTxBufferRead--;
 512:Generated_Source\PSoC5/SPI.c ****             }
 513:Generated_Source\PSoC5/SPI.c **** 
 514:Generated_Source\PSoC5/SPI.c ****         }while(tmpTxBufferRead == SPI_txBufferWrite);
 515:Generated_Source\PSoC5/SPI.c **** 
 516:Generated_Source\PSoC5/SPI.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC5/SPI.c ****         SPI_DisableTxInt();
 518:Generated_Source\PSoC5/SPI.c **** 
 519:Generated_Source\PSoC5/SPI.c ****         tempStatus = SPI_GET_STATUS_TX(SPI_swStatusTx);
 520:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusTx = tempStatus;
 521:Generated_Source\PSoC5/SPI.c **** 
 522:Generated_Source\PSoC5/SPI.c **** 
 523:Generated_Source\PSoC5/SPI.c ****         if((SPI_txBufferRead == SPI_txBufferWrite) &&
 524:Generated_Source\PSoC5/SPI.c ****            (0u != (SPI_swStatusTx & SPI_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC5/SPI.c ****         {
 526:Generated_Source\PSoC5/SPI.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC5/SPI.c ****             CY_SET_REG8(SPI_TXDATA_PTR, txData);
 528:Generated_Source\PSoC5/SPI.c ****         }
 529:Generated_Source\PSoC5/SPI.c ****         else
 530:Generated_Source\PSoC5/SPI.c ****         {
 531:Generated_Source\PSoC5/SPI.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC5/SPI.c ****             SPI_txBufferWrite++;
 533:Generated_Source\PSoC5/SPI.c ****             if(SPI_txBufferWrite >= SPI_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC5/SPI.c ****             {
 535:Generated_Source\PSoC5/SPI.c ****                 SPI_txBufferWrite = 0u;
 536:Generated_Source\PSoC5/SPI.c ****             }
 537:Generated_Source\PSoC5/SPI.c **** 
 538:Generated_Source\PSoC5/SPI.c ****             if(SPI_txBufferWrite == SPI_txBufferRead)
 539:Generated_Source\PSoC5/SPI.c ****             {
 540:Generated_Source\PSoC5/SPI.c ****                 SPI_txBufferRead++;
 541:Generated_Source\PSoC5/SPI.c ****                 if(SPI_txBufferRead >= SPI_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC5/SPI.c ****                 {
 543:Generated_Source\PSoC5/SPI.c ****                     SPI_txBufferRead = 0u;
 544:Generated_Source\PSoC5/SPI.c ****                 }
 545:Generated_Source\PSoC5/SPI.c ****                 SPI_txBufferFull = 1u;
 546:Generated_Source\PSoC5/SPI.c ****             }
 547:Generated_Source\PSoC5/SPI.c **** 
 548:Generated_Source\PSoC5/SPI.c ****             SPI_txBuffer[SPI_txBufferWrite] = txData;
 549:Generated_Source\PSoC5/SPI.c **** 
 550:Generated_Source\PSoC5/SPI.c ****             SPI_TX_STATUS_MASK_REG |= SPI_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC5/SPI.c ****         }
 552:Generated_Source\PSoC5/SPI.c **** 
 553:Generated_Source\PSoC5/SPI.c ****         SPI_EnableTxInt();
 554:Generated_Source\PSoC5/SPI.c **** 
 555:Generated_Source\PSoC5/SPI.c ****     #else
 556:Generated_Source\PSoC5/SPI.c ****         /* Wait until TX FIFO has a place */
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 17


 557:Generated_Source\PSoC5/SPI.c ****         while(0u == (SPI_TX_STATUS_REG & SPI_STS_TX_FIFO_NOT_FULL))
 340              		.loc 1 557 0 discriminator 1
 341 0000 034B     		ldr	r3, .L35
 342 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 343 0004 13F0040F 		tst	r3, #4
 344 0008 FAD0     		beq	.L34
 558:Generated_Source\PSoC5/SPI.c ****         {
 559:Generated_Source\PSoC5/SPI.c ****         }
 560:Generated_Source\PSoC5/SPI.c **** 
 561:Generated_Source\PSoC5/SPI.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC5/SPI.c ****         CY_SET_REG8(SPI_TXDATA_PTR, txData);
 345              		.loc 1 562 0
 346 000a 024B     		ldr	r3, .L35+4
 347 000c 1870     		strb	r0, [r3]
 348 000e 7047     		bx	lr
 349              	.L36:
 350              		.align	2
 351              	.L35:
 352 0010 6B650040 		.word	1073767787
 353 0014 44640040 		.word	1073767492
 354              		.cfi_endproc
 355              	.LFE12:
 356              		.size	SPI_WriteTxData, .-SPI_WriteTxData
 357              		.section	.text.SPI_ReadRxData,"ax",%progbits
 358              		.align	2
 359              		.global	SPI_ReadRxData
 360              		.thumb
 361              		.thumb_func
 362              		.type	SPI_ReadRxData, %function
 363              	SPI_ReadRxData:
 364              	.LFB13:
 563:Generated_Source\PSoC5/SPI.c **** 
 564:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC5/SPI.c **** }
 566:Generated_Source\PSoC5/SPI.c **** 
 567:Generated_Source\PSoC5/SPI.c **** 
 568:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 569:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ReadRxData
 570:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 571:Generated_Source\PSoC5/SPI.c **** *
 572:Generated_Source\PSoC5/SPI.c **** * Summary:
 573:Generated_Source\PSoC5/SPI.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC5/SPI.c **** *
 575:Generated_Source\PSoC5/SPI.c **** * Parameters:
 576:Generated_Source\PSoC5/SPI.c **** *  None.
 577:Generated_Source\PSoC5/SPI.c **** *
 578:Generated_Source\PSoC5/SPI.c **** * Return:
 579:Generated_Source\PSoC5/SPI.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC5/SPI.c **** *
 581:Generated_Source\PSoC5/SPI.c **** * Global variables:
 582:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC5/SPI.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC5/SPI.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC5/SPI.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBuffer[SPI_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC5/SPI.c **** *  received data.
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 18


 589:Generated_Source\PSoC5/SPI.c **** *
 590:Generated_Source\PSoC5/SPI.c **** * Theory:
 591:Generated_Source\PSoC5/SPI.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC5/SPI.c **** *
 593:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 594:Generated_Source\PSoC5/SPI.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC5/SPI.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC5/SPI.c **** *  ReadByte() function.
 597:Generated_Source\PSoC5/SPI.c **** *
 598:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 599:Generated_Source\PSoC5/SPI.c **** *  No.
 600:Generated_Source\PSoC5/SPI.c **** *
 601:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 602:Generated_Source\PSoC5/SPI.c **** uint8 SPI_ReadRxData(void) 
 603:Generated_Source\PSoC5/SPI.c **** {
 365              		.loc 1 603 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 604:Generated_Source\PSoC5/SPI.c ****     uint8 rxData;
 605:Generated_Source\PSoC5/SPI.c **** 
 606:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC5/SPI.c **** 
 608:Generated_Source\PSoC5/SPI.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC5/SPI.c ****         SPI_DisableRxInt();
 610:Generated_Source\PSoC5/SPI.c **** 
 611:Generated_Source\PSoC5/SPI.c ****         if(SPI_rxBufferRead != SPI_rxBufferWrite)
 612:Generated_Source\PSoC5/SPI.c ****         {
 613:Generated_Source\PSoC5/SPI.c ****             if(0u == SPI_rxBufferFull)
 614:Generated_Source\PSoC5/SPI.c ****             {
 615:Generated_Source\PSoC5/SPI.c ****                 SPI_rxBufferRead++;
 616:Generated_Source\PSoC5/SPI.c ****                 if(SPI_rxBufferRead >= SPI_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC5/SPI.c ****                 {
 618:Generated_Source\PSoC5/SPI.c ****                     SPI_rxBufferRead = 0u;
 619:Generated_Source\PSoC5/SPI.c ****                 }
 620:Generated_Source\PSoC5/SPI.c ****             }
 621:Generated_Source\PSoC5/SPI.c ****             else
 622:Generated_Source\PSoC5/SPI.c ****             {
 623:Generated_Source\PSoC5/SPI.c ****                 SPI_rxBufferFull = 0u;
 624:Generated_Source\PSoC5/SPI.c ****             }
 625:Generated_Source\PSoC5/SPI.c ****         }
 626:Generated_Source\PSoC5/SPI.c **** 
 627:Generated_Source\PSoC5/SPI.c ****         rxData = SPI_rxBuffer[SPI_rxBufferRead];
 628:Generated_Source\PSoC5/SPI.c **** 
 629:Generated_Source\PSoC5/SPI.c ****         SPI_EnableRxInt();
 630:Generated_Source\PSoC5/SPI.c **** 
 631:Generated_Source\PSoC5/SPI.c ****     #else
 632:Generated_Source\PSoC5/SPI.c **** 
 633:Generated_Source\PSoC5/SPI.c ****         rxData = CY_GET_REG8(SPI_RXDATA_PTR);
 370              		.loc 1 633 0
 371 0000 014B     		ldr	r3, .L38
 372 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 373              	.LVL15:
 634:Generated_Source\PSoC5/SPI.c **** 
 635:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC5/SPI.c **** 
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 19


 637:Generated_Source\PSoC5/SPI.c ****     return(rxData);
 638:Generated_Source\PSoC5/SPI.c **** }
 374              		.loc 1 638 0
 375 0004 7047     		bx	lr
 376              	.L39:
 377 0006 00BF     		.align	2
 378              	.L38:
 379 0008 54640040 		.word	1073767508
 380              		.cfi_endproc
 381              	.LFE13:
 382              		.size	SPI_ReadRxData, .-SPI_ReadRxData
 383              		.section	.text.SPI_GetRxBufferSize,"ax",%progbits
 384              		.align	2
 385              		.global	SPI_GetRxBufferSize
 386              		.thumb
 387              		.thumb_func
 388              		.type	SPI_GetRxBufferSize, %function
 389              	SPI_GetRxBufferSize:
 390              	.LFB14:
 639:Generated_Source\PSoC5/SPI.c **** 
 640:Generated_Source\PSoC5/SPI.c **** 
 641:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 642:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_GetRxBufferSize
 643:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 644:Generated_Source\PSoC5/SPI.c **** *
 645:Generated_Source\PSoC5/SPI.c **** * Summary:
 646:Generated_Source\PSoC5/SPI.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC5/SPI.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC5/SPI.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC5/SPI.c **** *
 650:Generated_Source\PSoC5/SPI.c **** * Parameters:
 651:Generated_Source\PSoC5/SPI.c **** *  None.
 652:Generated_Source\PSoC5/SPI.c **** *
 653:Generated_Source\PSoC5/SPI.c **** * Return:
 654:Generated_Source\PSoC5/SPI.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC5/SPI.c **** *
 656:Generated_Source\PSoC5/SPI.c **** * Global variables:
 657:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC5/SPI.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC5/SPI.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC5/SPI.c **** *
 662:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 663:Generated_Source\PSoC5/SPI.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC5/SPI.c **** *
 665:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 666:Generated_Source\PSoC5/SPI.c **** uint8 SPI_GetRxBufferSize(void) 
 667:Generated_Source\PSoC5/SPI.c **** {
 391              		.loc 1 667 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 668:Generated_Source\PSoC5/SPI.c ****     uint8 size;
 669:Generated_Source\PSoC5/SPI.c **** 
 670:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC5/SPI.c **** 
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 20


 672:Generated_Source\PSoC5/SPI.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC5/SPI.c ****         SPI_DisableRxInt();
 674:Generated_Source\PSoC5/SPI.c **** 
 675:Generated_Source\PSoC5/SPI.c ****         if(SPI_rxBufferRead == SPI_rxBufferWrite)
 676:Generated_Source\PSoC5/SPI.c ****         {
 677:Generated_Source\PSoC5/SPI.c ****             size = 0u;
 678:Generated_Source\PSoC5/SPI.c ****         }
 679:Generated_Source\PSoC5/SPI.c ****         else if(SPI_rxBufferRead < SPI_rxBufferWrite)
 680:Generated_Source\PSoC5/SPI.c ****         {
 681:Generated_Source\PSoC5/SPI.c ****             size = (SPI_rxBufferWrite - SPI_rxBufferRead);
 682:Generated_Source\PSoC5/SPI.c ****         }
 683:Generated_Source\PSoC5/SPI.c ****         else
 684:Generated_Source\PSoC5/SPI.c ****         {
 685:Generated_Source\PSoC5/SPI.c ****             size = (SPI_RX_BUFFER_SIZE - SPI_rxBufferRead) + SPI_rxBufferWrite;
 686:Generated_Source\PSoC5/SPI.c ****         }
 687:Generated_Source\PSoC5/SPI.c **** 
 688:Generated_Source\PSoC5/SPI.c ****         SPI_EnableRxInt();
 689:Generated_Source\PSoC5/SPI.c **** 
 690:Generated_Source\PSoC5/SPI.c ****     #else
 691:Generated_Source\PSoC5/SPI.c **** 
 692:Generated_Source\PSoC5/SPI.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC5/SPI.c ****         size = (0u != (SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 396              		.loc 1 693 0
 397 0000 044B     		ldr	r3, .L43
 398 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 399 0004 13F0200F 		tst	r3, #32
 400 0008 01D0     		beq	.L42
 401 000a 0120     		movs	r0, #1
 402 000c 7047     		bx	lr
 403              	.L42:
 404 000e 0020     		movs	r0, #0
 405              	.LVL16:
 694:Generated_Source\PSoC5/SPI.c **** 
 695:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC5/SPI.c **** 
 697:Generated_Source\PSoC5/SPI.c ****     return(size);
 698:Generated_Source\PSoC5/SPI.c **** }
 406              		.loc 1 698 0
 407 0010 7047     		bx	lr
 408              	.L44:
 409 0012 00BF     		.align	2
 410              	.L43:
 411 0014 65640040 		.word	1073767525
 412              		.cfi_endproc
 413              	.LFE14:
 414              		.size	SPI_GetRxBufferSize, .-SPI_GetRxBufferSize
 415              		.section	.text.SPI_GetTxBufferSize,"ax",%progbits
 416              		.align	2
 417              		.global	SPI_GetTxBufferSize
 418              		.thumb
 419              		.thumb_func
 420              		.type	SPI_GetTxBufferSize, %function
 421              	SPI_GetTxBufferSize:
 422              	.LFB15:
 699:Generated_Source\PSoC5/SPI.c **** 
 700:Generated_Source\PSoC5/SPI.c **** 
 701:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 21


 702:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_GetTxBufferSize
 703:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 704:Generated_Source\PSoC5/SPI.c **** *
 705:Generated_Source\PSoC5/SPI.c **** * Summary:
 706:Generated_Source\PSoC5/SPI.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC5/SPI.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC5/SPI.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC5/SPI.c **** *  Software Buffer.
 710:Generated_Source\PSoC5/SPI.c **** *
 711:Generated_Source\PSoC5/SPI.c **** * Parameters:
 712:Generated_Source\PSoC5/SPI.c **** *  None.
 713:Generated_Source\PSoC5/SPI.c **** *
 714:Generated_Source\PSoC5/SPI.c **** * Return:
 715:Generated_Source\PSoC5/SPI.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC5/SPI.c **** *
 717:Generated_Source\PSoC5/SPI.c **** * Global variables:
 718:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/SPI.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC5/SPI.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC5/SPI.c **** *
 723:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 724:Generated_Source\PSoC5/SPI.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC5/SPI.c **** *
 726:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/SPI.c **** uint8  SPI_GetTxBufferSize(void) 
 728:Generated_Source\PSoC5/SPI.c **** {
 423              		.loc 1 728 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 729:Generated_Source\PSoC5/SPI.c ****     uint8 size;
 730:Generated_Source\PSoC5/SPI.c **** 
 731:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/SPI.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC5/SPI.c ****         SPI_DisableTxInt();
 734:Generated_Source\PSoC5/SPI.c **** 
 735:Generated_Source\PSoC5/SPI.c ****         if(SPI_txBufferRead == SPI_txBufferWrite)
 736:Generated_Source\PSoC5/SPI.c ****         {
 737:Generated_Source\PSoC5/SPI.c ****             size = 0u;
 738:Generated_Source\PSoC5/SPI.c ****         }
 739:Generated_Source\PSoC5/SPI.c ****         else if(SPI_txBufferRead < SPI_txBufferWrite)
 740:Generated_Source\PSoC5/SPI.c ****         {
 741:Generated_Source\PSoC5/SPI.c ****             size = (SPI_txBufferWrite - SPI_txBufferRead);
 742:Generated_Source\PSoC5/SPI.c ****         }
 743:Generated_Source\PSoC5/SPI.c ****         else
 744:Generated_Source\PSoC5/SPI.c ****         {
 745:Generated_Source\PSoC5/SPI.c ****             size = (SPI_TX_BUFFER_SIZE - SPI_txBufferRead) + SPI_txBufferWrite;
 746:Generated_Source\PSoC5/SPI.c ****         }
 747:Generated_Source\PSoC5/SPI.c **** 
 748:Generated_Source\PSoC5/SPI.c ****         SPI_EnableTxInt();
 749:Generated_Source\PSoC5/SPI.c **** 
 750:Generated_Source\PSoC5/SPI.c ****     #else
 751:Generated_Source\PSoC5/SPI.c **** 
 752:Generated_Source\PSoC5/SPI.c ****         size = SPI_TX_STATUS_REG;
 428              		.loc 1 752 0
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 22


 429 0000 074B     		ldr	r3, .L49
 430 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431 0004 DBB2     		uxtb	r3, r3
 432              	.LVL17:
 753:Generated_Source\PSoC5/SPI.c **** 
 754:Generated_Source\PSoC5/SPI.c ****         if(0u != (size & SPI_STS_TX_FIFO_EMPTY))
 433              		.loc 1 754 0
 434 0006 13F0020F 		tst	r3, #2
 435 000a 04D1     		bne	.L47
 755:Generated_Source\PSoC5/SPI.c ****         {
 756:Generated_Source\PSoC5/SPI.c ****             size = 0u;
 757:Generated_Source\PSoC5/SPI.c ****         }
 758:Generated_Source\PSoC5/SPI.c ****         else if(0u != (size & SPI_STS_TX_FIFO_NOT_FULL))
 436              		.loc 1 758 0
 437 000c 13F0040F 		tst	r3, #4
 438 0010 03D0     		beq	.L48
 759:Generated_Source\PSoC5/SPI.c ****         {
 760:Generated_Source\PSoC5/SPI.c ****             size = 1u;
 439              		.loc 1 760 0
 440 0012 0120     		movs	r0, #1
 441 0014 7047     		bx	lr
 442              	.L47:
 756:Generated_Source\PSoC5/SPI.c ****         }
 443              		.loc 1 756 0
 444 0016 0020     		movs	r0, #0
 445 0018 7047     		bx	lr
 446              	.L48:
 761:Generated_Source\PSoC5/SPI.c ****         }
 762:Generated_Source\PSoC5/SPI.c ****         else
 763:Generated_Source\PSoC5/SPI.c ****         {
 764:Generated_Source\PSoC5/SPI.c ****             size = SPI_FIFO_SIZE;
 447              		.loc 1 764 0
 448 001a 0420     		movs	r0, #4
 449              	.LVL18:
 765:Generated_Source\PSoC5/SPI.c ****         }
 766:Generated_Source\PSoC5/SPI.c **** 
 767:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC5/SPI.c **** 
 769:Generated_Source\PSoC5/SPI.c ****     return(size);
 770:Generated_Source\PSoC5/SPI.c **** }
 450              		.loc 1 770 0
 451 001c 7047     		bx	lr
 452              	.L50:
 453 001e 00BF     		.align	2
 454              	.L49:
 455 0020 6B650040 		.word	1073767787
 456              		.cfi_endproc
 457              	.LFE15:
 458              		.size	SPI_GetTxBufferSize, .-SPI_GetTxBufferSize
 459              		.section	.text.SPI_ClearRxBuffer,"ax",%progbits
 460              		.align	2
 461              		.global	SPI_ClearRxBuffer
 462              		.thumb
 463              		.thumb_func
 464              		.type	SPI_ClearRxBuffer, %function
 465              	SPI_ClearRxBuffer:
 466              	.LFB16:
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 23


 771:Generated_Source\PSoC5/SPI.c **** 
 772:Generated_Source\PSoC5/SPI.c **** 
 773:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 774:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ClearRxBuffer
 775:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 776:Generated_Source\PSoC5/SPI.c **** *
 777:Generated_Source\PSoC5/SPI.c **** * Summary:
 778:Generated_Source\PSoC5/SPI.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC5/SPI.c **** *
 780:Generated_Source\PSoC5/SPI.c **** * Parameters:
 781:Generated_Source\PSoC5/SPI.c **** *  None.
 782:Generated_Source\PSoC5/SPI.c **** *
 783:Generated_Source\PSoC5/SPI.c **** * Return:
 784:Generated_Source\PSoC5/SPI.c **** *  None.
 785:Generated_Source\PSoC5/SPI.c **** *
 786:Generated_Source\PSoC5/SPI.c **** * Global variables:
 787:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC5/SPI.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC5/SPI.c **** *  call - resets to zero.
 790:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC5/SPI.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC5/SPI.c **** *  resets to zero.
 793:Generated_Source\PSoC5/SPI.c **** *
 794:Generated_Source\PSoC5/SPI.c **** * Theory:
 795:Generated_Source\PSoC5/SPI.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC5/SPI.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC5/SPI.c **** *  remained in the RAM.
 798:Generated_Source\PSoC5/SPI.c **** *
 799:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 800:Generated_Source\PSoC5/SPI.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC5/SPI.c **** *
 802:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 803:Generated_Source\PSoC5/SPI.c **** *  No.
 804:Generated_Source\PSoC5/SPI.c **** *
 805:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 806:Generated_Source\PSoC5/SPI.c **** void SPI_ClearRxBuffer(void) 
 807:Generated_Source\PSoC5/SPI.c **** {
 467              		.loc 1 807 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 808:Generated_Source\PSoC5/SPI.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC5/SPI.c ****     while(0u !=(SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY))
 472              		.loc 1 809 0
 473 0000 01E0     		b	.L52
 474              	.L53:
 810:Generated_Source\PSoC5/SPI.c ****     {
 811:Generated_Source\PSoC5/SPI.c ****         (void) CY_GET_REG8(SPI_RXDATA_PTR);
 475              		.loc 1 811 0
 476 0002 044B     		ldr	r3, .L54
 477 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 478              	.L52:
 809:Generated_Source\PSoC5/SPI.c ****     {
 479              		.loc 1 809 0
 480 0006 044B     		ldr	r3, .L54+4
 481 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 24


 482 000a 13F0200F 		tst	r3, #32
 483 000e F8D1     		bne	.L53
 812:Generated_Source\PSoC5/SPI.c ****     }
 813:Generated_Source\PSoC5/SPI.c **** 
 814:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC5/SPI.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC5/SPI.c ****         SPI_DisableRxInt();
 817:Generated_Source\PSoC5/SPI.c **** 
 818:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferFull  = 0u;
 819:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferRead  = 0u;
 820:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferWrite = 0u;
 821:Generated_Source\PSoC5/SPI.c **** 
 822:Generated_Source\PSoC5/SPI.c ****         SPI_EnableRxInt();
 823:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC5/SPI.c **** }
 484              		.loc 1 824 0
 485 0010 7047     		bx	lr
 486              	.L55:
 487 0012 00BF     		.align	2
 488              	.L54:
 489 0014 54640040 		.word	1073767508
 490 0018 65640040 		.word	1073767525
 491              		.cfi_endproc
 492              	.LFE16:
 493              		.size	SPI_ClearRxBuffer, .-SPI_ClearRxBuffer
 494              		.section	.text.SPI_ClearTxBuffer,"ax",%progbits
 495              		.align	2
 496              		.global	SPI_ClearTxBuffer
 497              		.thumb
 498              		.thumb_func
 499              		.type	SPI_ClearTxBuffer, %function
 500              	SPI_ClearTxBuffer:
 501              	.LFB17:
 825:Generated_Source\PSoC5/SPI.c **** 
 826:Generated_Source\PSoC5/SPI.c **** 
 827:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 828:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ClearTxBuffer
 829:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 830:Generated_Source\PSoC5/SPI.c **** *
 831:Generated_Source\PSoC5/SPI.c **** * Summary:
 832:Generated_Source\PSoC5/SPI.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC5/SPI.c **** *
 834:Generated_Source\PSoC5/SPI.c **** * Parameters:
 835:Generated_Source\PSoC5/SPI.c **** *  None.
 836:Generated_Source\PSoC5/SPI.c **** *
 837:Generated_Source\PSoC5/SPI.c **** * Return:
 838:Generated_Source\PSoC5/SPI.c **** *  None.
 839:Generated_Source\PSoC5/SPI.c **** *
 840:Generated_Source\PSoC5/SPI.c **** * Global variables:
 841:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC5/SPI.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC5/SPI.c **** *  call - resets to zero.
 844:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC5/SPI.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC5/SPI.c **** *  resets to zero.
 847:Generated_Source\PSoC5/SPI.c **** *
 848:Generated_Source\PSoC5/SPI.c **** * Theory:
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 25


 849:Generated_Source\PSoC5/SPI.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC5/SPI.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC5/SPI.c **** *  remained in the RAM.
 852:Generated_Source\PSoC5/SPI.c **** *
 853:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 854:Generated_Source\PSoC5/SPI.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC5/SPI.c **** *  overwritten.
 856:Generated_Source\PSoC5/SPI.c **** *
 857:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 858:Generated_Source\PSoC5/SPI.c **** *  No.
 859:Generated_Source\PSoC5/SPI.c **** *
 860:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 861:Generated_Source\PSoC5/SPI.c **** void SPI_ClearTxBuffer(void) 
 862:Generated_Source\PSoC5/SPI.c **** {
 502              		.loc 1 862 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506 0000 08B5     		push	{r3, lr}
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 3, -8
 509              		.cfi_offset 14, -4
 863:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC5/SPI.c **** 
 865:Generated_Source\PSoC5/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 510              		.loc 1 865 0
 511 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 512              	.LVL19:
 866:Generated_Source\PSoC5/SPI.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC5/SPI.c ****     SPI_AUX_CONTROL_DP0_REG |= ((uint8)  SPI_TX_FIFO_CLR);
 513              		.loc 1 867 0
 514 0006 064B     		ldr	r3, .L58
 515 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 516 000a 42F00102 		orr	r2, r2, #1
 517 000e 1A70     		strb	r2, [r3]
 868:Generated_Source\PSoC5/SPI.c ****     SPI_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI_TX_FIFO_CLR);
 518              		.loc 1 868 0
 519 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 520 0012 02F0FE02 		and	r2, r2, #254
 521 0016 1A70     		strb	r2, [r3]
 869:Generated_Source\PSoC5/SPI.c **** 
 870:Generated_Source\PSoC5/SPI.c ****     #if(SPI_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC5/SPI.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC5/SPI.c ****         SPI_AUX_CONTROL_DP1_REG |= ((uint8)  SPI_TX_FIFO_CLR);
 873:Generated_Source\PSoC5/SPI.c ****         SPI_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI_TX_FIFO_CLR);
 874:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 522              		.loc 1 875 0
 523 0018 FFF7FEFF 		bl	CyExitCriticalSection
 524              	.LVL20:
 525 001c 08BD     		pop	{r3, pc}
 526              	.L59:
 527 001e 00BF     		.align	2
 528              	.L58:
 529 0020 94640040 		.word	1073767572
 530              		.cfi_endproc
 531              	.LFE17:
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 26


 532              		.size	SPI_ClearTxBuffer, .-SPI_ClearTxBuffer
 533              		.section	.text.SPI_PutArray,"ax",%progbits
 534              		.align	2
 535              		.global	SPI_PutArray
 536              		.thumb
 537              		.thumb_func
 538              		.type	SPI_PutArray, %function
 539              	SPI_PutArray:
 540              	.LFB18:
 876:Generated_Source\PSoC5/SPI.c **** 
 877:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC5/SPI.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC5/SPI.c ****         SPI_DisableTxInt();
 880:Generated_Source\PSoC5/SPI.c **** 
 881:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferFull  = 0u;
 882:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferRead  = 0u;
 883:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferWrite = 0u;
 884:Generated_Source\PSoC5/SPI.c **** 
 885:Generated_Source\PSoC5/SPI.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC5/SPI.c ****         SPI_TX_STATUS_MASK_REG &= ((uint8) ~SPI_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC5/SPI.c **** 
 888:Generated_Source\PSoC5/SPI.c ****         SPI_EnableTxInt();
 889:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC5/SPI.c **** }
 891:Generated_Source\PSoC5/SPI.c **** 
 892:Generated_Source\PSoC5/SPI.c **** 
 893:Generated_Source\PSoC5/SPI.c **** #if(0u != SPI_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC5/SPI.c ****     /*******************************************************************************
 895:Generated_Source\PSoC5/SPI.c ****     * Function Name: SPI_TxEnable
 896:Generated_Source\PSoC5/SPI.c ****     ********************************************************************************
 897:Generated_Source\PSoC5/SPI.c ****     *
 898:Generated_Source\PSoC5/SPI.c ****     * Summary:
 899:Generated_Source\PSoC5/SPI.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC5/SPI.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC5/SPI.c ****     *
 902:Generated_Source\PSoC5/SPI.c ****     * Parameters:
 903:Generated_Source\PSoC5/SPI.c ****     *  None.
 904:Generated_Source\PSoC5/SPI.c ****     *
 905:Generated_Source\PSoC5/SPI.c ****     * Return:
 906:Generated_Source\PSoC5/SPI.c ****     *  None.
 907:Generated_Source\PSoC5/SPI.c ****     *
 908:Generated_Source\PSoC5/SPI.c ****     *******************************************************************************/
 909:Generated_Source\PSoC5/SPI.c ****     void SPI_TxEnable(void) 
 910:Generated_Source\PSoC5/SPI.c ****     {
 911:Generated_Source\PSoC5/SPI.c ****         SPI_CONTROL_REG |= SPI_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC5/SPI.c ****     }
 913:Generated_Source\PSoC5/SPI.c **** 
 914:Generated_Source\PSoC5/SPI.c **** 
 915:Generated_Source\PSoC5/SPI.c ****     /*******************************************************************************
 916:Generated_Source\PSoC5/SPI.c ****     * Function Name: SPI_TxDisable
 917:Generated_Source\PSoC5/SPI.c ****     ********************************************************************************
 918:Generated_Source\PSoC5/SPI.c ****     *
 919:Generated_Source\PSoC5/SPI.c ****     * Summary:
 920:Generated_Source\PSoC5/SPI.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC5/SPI.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC5/SPI.c ****     *
 923:Generated_Source\PSoC5/SPI.c ****     * Parameters:
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 27


 924:Generated_Source\PSoC5/SPI.c ****     *  None.
 925:Generated_Source\PSoC5/SPI.c ****     *
 926:Generated_Source\PSoC5/SPI.c ****     * Return:
 927:Generated_Source\PSoC5/SPI.c ****     *  None.
 928:Generated_Source\PSoC5/SPI.c ****     *
 929:Generated_Source\PSoC5/SPI.c ****     *******************************************************************************/
 930:Generated_Source\PSoC5/SPI.c ****     void SPI_TxDisable(void) 
 931:Generated_Source\PSoC5/SPI.c ****     {
 932:Generated_Source\PSoC5/SPI.c ****         SPI_CONTROL_REG &= ((uint8) ~SPI_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC5/SPI.c ****     }
 934:Generated_Source\PSoC5/SPI.c **** 
 935:Generated_Source\PSoC5/SPI.c **** #endif /* (0u != SPI_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC5/SPI.c **** 
 937:Generated_Source\PSoC5/SPI.c **** 
 938:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 939:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_PutArray
 940:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 941:Generated_Source\PSoC5/SPI.c **** *
 942:Generated_Source\PSoC5/SPI.c **** * Summary:
 943:Generated_Source\PSoC5/SPI.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC5/SPI.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC5/SPI.c **** *
 946:Generated_Source\PSoC5/SPI.c **** * Parameters:
 947:Generated_Source\PSoC5/SPI.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC5/SPI.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC5/SPI.c **** *
 950:Generated_Source\PSoC5/SPI.c **** * Return:
 951:Generated_Source\PSoC5/SPI.c **** *  None.
 952:Generated_Source\PSoC5/SPI.c **** *
 953:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 954:Generated_Source\PSoC5/SPI.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC5/SPI.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC5/SPI.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC5/SPI.c **** *
 958:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 959:Generated_Source\PSoC5/SPI.c **** *  No.
 960:Generated_Source\PSoC5/SPI.c **** *
 961:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 962:Generated_Source\PSoC5/SPI.c **** void SPI_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC5/SPI.c ****                                                                           
 964:Generated_Source\PSoC5/SPI.c **** {
 541              		.loc 1 964 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              	.LVL21:
 546 0000 70B5     		push	{r4, r5, r6, lr}
 547              		.cfi_def_cfa_offset 16
 548              		.cfi_offset 4, -16
 549              		.cfi_offset 5, -12
 550              		.cfi_offset 6, -8
 551              		.cfi_offset 14, -4
 552 0002 0646     		mov	r6, r0
 553 0004 0C46     		mov	r4, r1
 554              	.LVL22:
 965:Generated_Source\PSoC5/SPI.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC5/SPI.c **** 
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 28


 967:Generated_Source\PSoC5/SPI.c ****     bufIndex = 0u;
 555              		.loc 1 967 0
 556 0006 0025     		movs	r5, #0
 968:Generated_Source\PSoC5/SPI.c **** 
 969:Generated_Source\PSoC5/SPI.c ****     while(byteCount > 0u)
 557              		.loc 1 969 0
 558 0008 06E0     		b	.L61
 559              	.LVL23:
 560              	.L62:
 970:Generated_Source\PSoC5/SPI.c ****     {
 971:Generated_Source\PSoC5/SPI.c ****         SPI_WriteTxData(buffer[bufIndex]);
 561              		.loc 1 971 0
 562 000a 705D     		ldrb	r0, [r6, r5]	@ zero_extendqisi2
 563 000c FFF7FEFF 		bl	SPI_WriteTxData
 564              	.LVL24:
 972:Generated_Source\PSoC5/SPI.c ****         bufIndex++;
 565              		.loc 1 972 0
 566 0010 0135     		adds	r5, r5, #1
 567              	.LVL25:
 568 0012 EDB2     		uxtb	r5, r5
 569              	.LVL26:
 973:Generated_Source\PSoC5/SPI.c ****         byteCount--;
 570              		.loc 1 973 0
 571 0014 013C     		subs	r4, r4, #1
 572              	.LVL27:
 573 0016 E4B2     		uxtb	r4, r4
 574              	.LVL28:
 575              	.L61:
 969:Generated_Source\PSoC5/SPI.c ****     {
 576              		.loc 1 969 0
 577 0018 002C     		cmp	r4, #0
 578 001a F6D1     		bne	.L62
 974:Generated_Source\PSoC5/SPI.c ****     }
 975:Generated_Source\PSoC5/SPI.c **** }
 579              		.loc 1 975 0
 580 001c 70BD     		pop	{r4, r5, r6, pc}
 581              		.cfi_endproc
 582              	.LFE18:
 583              		.size	SPI_PutArray, .-SPI_PutArray
 584 001e 00BF     		.section	.text.SPI_ClearFIFO,"ax",%progbits
 585              		.align	2
 586              		.global	SPI_ClearFIFO
 587              		.thumb
 588              		.thumb_func
 589              		.type	SPI_ClearFIFO, %function
 590              	SPI_ClearFIFO:
 591              	.LFB19:
 976:Generated_Source\PSoC5/SPI.c **** 
 977:Generated_Source\PSoC5/SPI.c **** 
 978:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 979:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ClearFIFO
 980:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 981:Generated_Source\PSoC5/SPI.c **** *
 982:Generated_Source\PSoC5/SPI.c **** * Summary:
 983:Generated_Source\PSoC5/SPI.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC5/SPI.c **** *
 985:Generated_Source\PSoC5/SPI.c **** * Parameters:
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 29


 986:Generated_Source\PSoC5/SPI.c **** *  None.
 987:Generated_Source\PSoC5/SPI.c **** *
 988:Generated_Source\PSoC5/SPI.c **** * Return:
 989:Generated_Source\PSoC5/SPI.c **** *  None.
 990:Generated_Source\PSoC5/SPI.c **** *
 991:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 992:Generated_Source\PSoC5/SPI.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC5/SPI.c **** *
 994:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 995:Generated_Source\PSoC5/SPI.c **** void SPI_ClearFIFO(void) 
 996:Generated_Source\PSoC5/SPI.c **** {
 592              		.loc 1 996 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596 0000 08B5     		push	{r3, lr}
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 3, -8
 599              		.cfi_offset 14, -4
 997:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC5/SPI.c **** 
 999:Generated_Source\PSoC5/SPI.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC5/SPI.c ****     while(0u !=(SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY))
 600              		.loc 1 1000 0
 601 0002 01E0     		b	.L65
 602              	.L66:
1001:Generated_Source\PSoC5/SPI.c ****     {
1002:Generated_Source\PSoC5/SPI.c ****         (void) CY_GET_REG8(SPI_RXDATA_PTR);
 603              		.loc 1 1002 0
 604 0004 0A4B     		ldr	r3, .L68
 605 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 606              	.L65:
1000:Generated_Source\PSoC5/SPI.c ****     {
 607              		.loc 1 1000 0
 608 0008 0A4B     		ldr	r3, .L68+4
 609 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 610 000c 13F0200F 		tst	r3, #32
 611 0010 F8D1     		bne	.L66
1003:Generated_Source\PSoC5/SPI.c ****     }
1004:Generated_Source\PSoC5/SPI.c **** 
1005:Generated_Source\PSoC5/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 612              		.loc 1 1005 0
 613 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 614              	.LVL29:
1006:Generated_Source\PSoC5/SPI.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC5/SPI.c ****     SPI_AUX_CONTROL_DP0_REG |= ((uint8)  SPI_TX_FIFO_CLR);
 615              		.loc 1 1007 0
 616 0016 084B     		ldr	r3, .L68+8
 617 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 618 001a 42F00102 		orr	r2, r2, #1
 619 001e 1A70     		strb	r2, [r3]
1008:Generated_Source\PSoC5/SPI.c ****     SPI_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI_TX_FIFO_CLR);
 620              		.loc 1 1008 0
 621 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 622 0022 02F0FE02 		and	r2, r2, #254
 623 0026 1A70     		strb	r2, [r3]
1009:Generated_Source\PSoC5/SPI.c **** 
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 30


1010:Generated_Source\PSoC5/SPI.c ****     #if(SPI_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC5/SPI.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC5/SPI.c ****         SPI_AUX_CONTROL_DP1_REG |= ((uint8)  SPI_TX_FIFO_CLR);
1013:Generated_Source\PSoC5/SPI.c ****         SPI_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI_TX_FIFO_CLR);
1014:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 624              		.loc 1 1015 0
 625 0028 FFF7FEFF 		bl	CyExitCriticalSection
 626              	.LVL30:
 627 002c 08BD     		pop	{r3, pc}
 628              	.L69:
 629 002e 00BF     		.align	2
 630              	.L68:
 631 0030 54640040 		.word	1073767508
 632 0034 65640040 		.word	1073767525
 633 0038 94640040 		.word	1073767572
 634              		.cfi_endproc
 635              	.LFE19:
 636              		.size	SPI_ClearFIFO, .-SPI_ClearFIFO
 637              		.section	.text.SPI_Init,"ax",%progbits
 638              		.align	2
 639              		.global	SPI_Init
 640              		.thumb
 641              		.thumb_func
 642              		.type	SPI_Init, %function
 643              	SPI_Init:
 644              	.LFB0:
  64:Generated_Source\PSoC5/SPI.c ****     /* Initialize the Bit counter */
 645              		.loc 1 64 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649 0000 10B5     		push	{r4, lr}
 650              		.cfi_def_cfa_offset 8
 651              		.cfi_offset 4, -8
 652              		.cfi_offset 14, -4
  66:Generated_Source\PSoC5/SPI.c **** 
 653              		.loc 1 66 0
 654 0002 0F22     		movs	r2, #15
 655 0004 124B     		ldr	r3, .L72
 656 0006 1A70     		strb	r2, [r3]
  70:Generated_Source\PSoC5/SPI.c ****         CyIntSetPriority     (SPI_TX_ISR_NUMBER,  SPI_TX_ISR_PRIORITY);
 657              		.loc 1 70 0
 658 0008 124C     		ldr	r4, .L72+4
 659 000a 0223     		movs	r3, #2
 660 000c 2360     		str	r3, [r4]
  71:Generated_Source\PSoC5/SPI.c ****         (void) CyIntSetVector(SPI_TX_ISR_NUMBER, &SPI_TX_ISR);
 661              		.loc 1 71 0
 662 000e 0721     		movs	r1, #7
 663 0010 0120     		movs	r0, #1
 664 0012 FFF7FEFF 		bl	CyIntSetPriority
 665              	.LVL31:
  72:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_TX_INT_ENABLED) */
 666              		.loc 1 72 0
 667 0016 1049     		ldr	r1, .L72+8
 668 0018 0120     		movs	r0, #1
 669 001a FFF7FEFF 		bl	CyIntSetVector
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 31


 670              	.LVL32:
  77:Generated_Source\PSoC5/SPI.c ****         CyIntSetPriority     (SPI_RX_ISR_NUMBER,  SPI_RX_ISR_PRIORITY);
 671              		.loc 1 77 0
 672 001e 0123     		movs	r3, #1
 673 0020 2360     		str	r3, [r4]
  78:Generated_Source\PSoC5/SPI.c ****         (void) CyIntSetVector(SPI_RX_ISR_NUMBER, &SPI_RX_ISR);
 674              		.loc 1 78 0
 675 0022 0721     		movs	r1, #7
 676 0024 0020     		movs	r0, #0
 677 0026 FFF7FEFF 		bl	CyIntSetPriority
 678              	.LVL33:
  79:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_RX_INT_ENABLED) */
 679              		.loc 1 79 0
 680 002a 0C49     		ldr	r1, .L72+12
 681 002c 0020     		movs	r0, #0
 682 002e FFF7FEFF 		bl	CyIntSetVector
 683              	.LVL34:
  83:Generated_Source\PSoC5/SPI.c **** 
 684              		.loc 1 83 0
 685 0032 FFF7FEFF 		bl	SPI_ClearFIFO
 686              	.LVL35:
  97:Generated_Source\PSoC5/SPI.c ****     (void) SPI_ReadRxStatus(); /* Clear Rx status and swStatusRx */
 687              		.loc 1 97 0
 688 0036 FFF7FEFF 		bl	SPI_ReadTxStatus
 689              	.LVL36:
  98:Generated_Source\PSoC5/SPI.c **** 
 690              		.loc 1 98 0
 691 003a FFF7FEFF 		bl	SPI_ReadRxStatus
 692              	.LVL37:
 101:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_MASK_REG = SPI_RX_INIT_INTERRUPTS_MASK;
 693              		.loc 1 101 0
 694 003e 0322     		movs	r2, #3
 695 0040 074B     		ldr	r3, .L72+16
 696 0042 1A70     		strb	r2, [r3]
 102:Generated_Source\PSoC5/SPI.c **** }
 697              		.loc 1 102 0
 698 0044 0022     		movs	r2, #0
 699 0046 A3F58373 		sub	r3, r3, #262
 700 004a 1A70     		strb	r2, [r3]
 701 004c 10BD     		pop	{r4, pc}
 702              	.L73:
 703 004e 00BF     		.align	2
 704              	.L72:
 705 0050 84640040 		.word	1073767556
 706 0054 80E100E0 		.word	-536813184
 707 0058 00000000 		.word	SPI_TX_ISR
 708 005c 00000000 		.word	SPI_RX_ISR
 709 0060 8B650040 		.word	1073767819
 710              		.cfi_endproc
 711              	.LFE0:
 712              		.size	SPI_Init, .-SPI_Init
 713              		.section	.text.SPI_Start,"ax",%progbits
 714              		.align	2
 715              		.global	SPI_Start
 716              		.thumb
 717              		.thumb_func
 718              		.type	SPI_Start, %function
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 32


 719              	SPI_Start:
 720              	.LFB2:
 164:Generated_Source\PSoC5/SPI.c ****     if(0u == SPI_initVar)
 721              		.loc 1 164 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725 0000 08B5     		push	{r3, lr}
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 3, -8
 728              		.cfi_offset 14, -4
 165:Generated_Source\PSoC5/SPI.c ****     {
 729              		.loc 1 165 0
 730 0002 054B     		ldr	r3, .L77
 731 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 732 0006 23B9     		cbnz	r3, .L75
 167:Generated_Source\PSoC5/SPI.c ****         SPI_initVar = 1u;
 733              		.loc 1 167 0
 734 0008 FFF7FEFF 		bl	SPI_Init
 735              	.LVL38:
 168:Generated_Source\PSoC5/SPI.c ****     }
 736              		.loc 1 168 0
 737 000c 0122     		movs	r2, #1
 738 000e 024B     		ldr	r3, .L77
 739 0010 1A70     		strb	r2, [r3]
 740              	.L75:
 171:Generated_Source\PSoC5/SPI.c **** }
 741              		.loc 1 171 0
 742 0012 FFF7FEFF 		bl	SPI_Enable
 743              	.LVL39:
 744 0016 08BD     		pop	{r3, pc}
 745              	.L78:
 746              		.align	2
 747              	.L77:
 748 0018 00000000 		.word	.LANCHOR0
 749              		.cfi_endproc
 750              	.LFE2:
 751              		.size	SPI_Start, .-SPI_Start
 752              		.section	.text.SPI_EnableInt,"ax",%progbits
 753              		.align	2
 754              		.global	SPI_EnableInt
 755              		.thumb
 756              		.thumb_func
 757              		.type	SPI_EnableInt, %function
 758              	SPI_EnableInt:
 759              	.LFB20:
1016:Generated_Source\PSoC5/SPI.c **** }
1017:Generated_Source\PSoC5/SPI.c **** 
1018:Generated_Source\PSoC5/SPI.c **** 
1019:Generated_Source\PSoC5/SPI.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC5/SPI.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC5/SPI.c **** */
1022:Generated_Source\PSoC5/SPI.c **** 
1023:Generated_Source\PSoC5/SPI.c **** 
1024:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
1025:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_EnableInt
1026:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 33


1027:Generated_Source\PSoC5/SPI.c **** *
1028:Generated_Source\PSoC5/SPI.c **** * Summary:
1029:Generated_Source\PSoC5/SPI.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC5/SPI.c **** *
1031:Generated_Source\PSoC5/SPI.c **** * Parameters:
1032:Generated_Source\PSoC5/SPI.c **** *  None.
1033:Generated_Source\PSoC5/SPI.c **** *
1034:Generated_Source\PSoC5/SPI.c **** * Return:
1035:Generated_Source\PSoC5/SPI.c **** *  None.
1036:Generated_Source\PSoC5/SPI.c **** *
1037:Generated_Source\PSoC5/SPI.c **** * Theory:
1038:Generated_Source\PSoC5/SPI.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC5/SPI.c **** *
1040:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
1041:Generated_Source\PSoC5/SPI.c **** void SPI_EnableInt(void) 
1042:Generated_Source\PSoC5/SPI.c **** {
 760              		.loc 1 1042 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764 0000 08B5     		push	{r3, lr}
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 3, -8
 767              		.cfi_offset 14, -4
1043:Generated_Source\PSoC5/SPI.c ****     SPI_EnableRxInt();
 768              		.loc 1 1043 0
 769 0002 FFF7FEFF 		bl	SPI_EnableRxInt
 770              	.LVL40:
1044:Generated_Source\PSoC5/SPI.c ****     SPI_EnableTxInt();
 771              		.loc 1 1044 0
 772 0006 FFF7FEFF 		bl	SPI_EnableTxInt
 773              	.LVL41:
 774 000a 08BD     		pop	{r3, pc}
 775              		.cfi_endproc
 776              	.LFE20:
 777              		.size	SPI_EnableInt, .-SPI_EnableInt
 778              		.section	.text.SPI_DisableInt,"ax",%progbits
 779              		.align	2
 780              		.global	SPI_DisableInt
 781              		.thumb
 782              		.thumb_func
 783              		.type	SPI_DisableInt, %function
 784              	SPI_DisableInt:
 785              	.LFB21:
1045:Generated_Source\PSoC5/SPI.c **** }
1046:Generated_Source\PSoC5/SPI.c **** 
1047:Generated_Source\PSoC5/SPI.c **** 
1048:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
1049:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_DisableInt
1050:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
1051:Generated_Source\PSoC5/SPI.c **** *
1052:Generated_Source\PSoC5/SPI.c **** * Summary:
1053:Generated_Source\PSoC5/SPI.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC5/SPI.c **** *
1055:Generated_Source\PSoC5/SPI.c **** * Parameters:
1056:Generated_Source\PSoC5/SPI.c **** *  None.
1057:Generated_Source\PSoC5/SPI.c **** *
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 34


1058:Generated_Source\PSoC5/SPI.c **** * Return:
1059:Generated_Source\PSoC5/SPI.c **** *  None.
1060:Generated_Source\PSoC5/SPI.c **** *
1061:Generated_Source\PSoC5/SPI.c **** * Theory:
1062:Generated_Source\PSoC5/SPI.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC5/SPI.c **** *
1064:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
1065:Generated_Source\PSoC5/SPI.c **** void SPI_DisableInt(void) 
1066:Generated_Source\PSoC5/SPI.c **** {
 786              		.loc 1 1066 0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790 0000 08B5     		push	{r3, lr}
 791              		.cfi_def_cfa_offset 8
 792              		.cfi_offset 3, -8
 793              		.cfi_offset 14, -4
1067:Generated_Source\PSoC5/SPI.c ****     SPI_DisableTxInt();
 794              		.loc 1 1067 0
 795 0002 FFF7FEFF 		bl	SPI_DisableTxInt
 796              	.LVL42:
1068:Generated_Source\PSoC5/SPI.c ****     SPI_DisableRxInt();
 797              		.loc 1 1068 0
 798 0006 FFF7FEFF 		bl	SPI_DisableRxInt
 799              	.LVL43:
 800 000a 08BD     		pop	{r3, pc}
 801              		.cfi_endproc
 802              	.LFE21:
 803              		.size	SPI_DisableInt, .-SPI_DisableInt
 804              		.section	.text.SPI_SetInterruptMode,"ax",%progbits
 805              		.align	2
 806              		.global	SPI_SetInterruptMode
 807              		.thumb
 808              		.thumb_func
 809              		.type	SPI_SetInterruptMode, %function
 810              	SPI_SetInterruptMode:
 811              	.LFB22:
1069:Generated_Source\PSoC5/SPI.c **** }
1070:Generated_Source\PSoC5/SPI.c **** 
1071:Generated_Source\PSoC5/SPI.c **** 
1072:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
1073:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_SetInterruptMode
1074:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
1075:Generated_Source\PSoC5/SPI.c **** *
1076:Generated_Source\PSoC5/SPI.c **** * Summary:
1077:Generated_Source\PSoC5/SPI.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC5/SPI.c **** *
1079:Generated_Source\PSoC5/SPI.c **** * Parameters:
1080:Generated_Source\PSoC5/SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC5/SPI.c **** *  header file).
1082:Generated_Source\PSoC5/SPI.c **** *
1083:Generated_Source\PSoC5/SPI.c **** * Return:
1084:Generated_Source\PSoC5/SPI.c **** *  None.
1085:Generated_Source\PSoC5/SPI.c **** *
1086:Generated_Source\PSoC5/SPI.c **** * Theory:
1087:Generated_Source\PSoC5/SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC5/SPI.c **** *
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 35


1089:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
1090:Generated_Source\PSoC5/SPI.c **** void SPI_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC5/SPI.c **** {
 812              		.loc 1 1091 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              		@ link register save eliminated.
 817              	.LVL44:
1092:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPI_STS_SPI_IDLE));
 818              		.loc 1 1092 0
 819 0000 00F0EF02 		and	r2, r0, #239
 820 0004 024B     		ldr	r3, .L84
 821 0006 1A70     		strb	r2, [r3]
1093:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_MASK_REG  =  intSrc;
 822              		.loc 1 1093 0
 823 0008 A3F58373 		sub	r3, r3, #262
 824 000c 1870     		strb	r0, [r3]
 825 000e 7047     		bx	lr
 826              	.L85:
 827              		.align	2
 828              	.L84:
 829 0010 8B650040 		.word	1073767819
 830              		.cfi_endproc
 831              	.LFE22:
 832              		.size	SPI_SetInterruptMode, .-SPI_SetInterruptMode
 833              		.section	.text.SPI_ReadStatus,"ax",%progbits
 834              		.align	2
 835              		.global	SPI_ReadStatus
 836              		.thumb
 837              		.thumb_func
 838              		.type	SPI_ReadStatus, %function
 839              	SPI_ReadStatus:
 840              	.LFB23:
1094:Generated_Source\PSoC5/SPI.c **** }
1095:Generated_Source\PSoC5/SPI.c **** 
1096:Generated_Source\PSoC5/SPI.c **** 
1097:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
1098:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ReadStatus
1099:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
1100:Generated_Source\PSoC5/SPI.c **** *
1101:Generated_Source\PSoC5/SPI.c **** * Summary:
1102:Generated_Source\PSoC5/SPI.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC5/SPI.c **** *
1104:Generated_Source\PSoC5/SPI.c **** * Parameters:
1105:Generated_Source\PSoC5/SPI.c **** *  None.
1106:Generated_Source\PSoC5/SPI.c **** *
1107:Generated_Source\PSoC5/SPI.c **** * Return:
1108:Generated_Source\PSoC5/SPI.c **** *  Contents of the status register.
1109:Generated_Source\PSoC5/SPI.c **** *
1110:Generated_Source\PSoC5/SPI.c **** * Global variables:
1111:Generated_Source\PSoC5/SPI.c **** *  SPI_swStatus - used to store in software status register,
1112:Generated_Source\PSoC5/SPI.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC5/SPI.c **** *
1114:Generated_Source\PSoC5/SPI.c **** * Theory:
1115:Generated_Source\PSoC5/SPI.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC5/SPI.c **** *  and flow control.
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 36


1117:Generated_Source\PSoC5/SPI.c **** *
1118:Generated_Source\PSoC5/SPI.c **** * Side Effects:
1119:Generated_Source\PSoC5/SPI.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC5/SPI.c **** *
1121:Generated_Source\PSoC5/SPI.c **** * Reentrant:
1122:Generated_Source\PSoC5/SPI.c **** *  No.
1123:Generated_Source\PSoC5/SPI.c **** *
1124:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
1125:Generated_Source\PSoC5/SPI.c **** uint8 SPI_ReadStatus(void) 
1126:Generated_Source\PSoC5/SPI.c **** {
 841              		.loc 1 1126 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              		@ link register save eliminated.
1127:Generated_Source\PSoC5/SPI.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC5/SPI.c **** 
1129:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED || SPI_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC5/SPI.c **** 
1131:Generated_Source\PSoC5/SPI.c ****         SPI_DisableInt();
1132:Generated_Source\PSoC5/SPI.c **** 
1133:Generated_Source\PSoC5/SPI.c ****         tmpStatus  = SPI_GET_STATUS_RX(SPI_swStatusRx);
1134:Generated_Source\PSoC5/SPI.c ****         tmpStatus |= SPI_GET_STATUS_TX(SPI_swStatusTx);
1135:Generated_Source\PSoC5/SPI.c ****         tmpStatus &= ((uint8) ~SPI_STS_SPI_IDLE);
1136:Generated_Source\PSoC5/SPI.c **** 
1137:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusTx = 0u;
1138:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusRx = 0u;
1139:Generated_Source\PSoC5/SPI.c **** 
1140:Generated_Source\PSoC5/SPI.c ****         SPI_EnableInt();
1141:Generated_Source\PSoC5/SPI.c **** 
1142:Generated_Source\PSoC5/SPI.c ****     #else
1143:Generated_Source\PSoC5/SPI.c **** 
1144:Generated_Source\PSoC5/SPI.c ****         tmpStatus  = SPI_RX_STATUS_REG;
 846              		.loc 1 1144 0
 847 0000 034B     		ldr	r3, .L87
 848 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 849              	.LVL45:
1145:Generated_Source\PSoC5/SPI.c ****         tmpStatus |= SPI_TX_STATUS_REG;
 850              		.loc 1 1145 0
 851 0004 034A     		ldr	r2, .L87+4
 852 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 853 0008 1843     		orrs	r0, r0, r3
 854              	.LVL46:
1146:Generated_Source\PSoC5/SPI.c ****         tmpStatus &= ((uint8) ~SPI_STS_SPI_IDLE);
1147:Generated_Source\PSoC5/SPI.c **** 
1148:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED || SPI_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC5/SPI.c **** 
1150:Generated_Source\PSoC5/SPI.c ****     return(tmpStatus);
1151:Generated_Source\PSoC5/SPI.c **** }
 855              		.loc 1 1151 0
 856 000a 00F0EF00 		and	r0, r0, #239
 857              	.LVL47:
 858 000e 7047     		bx	lr
 859              	.L88:
 860              		.align	2
 861              	.L87:
 862 0010 65640040 		.word	1073767525
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 37


 863 0014 6B650040 		.word	1073767787
 864              		.cfi_endproc
 865              	.LFE23:
 866              		.size	SPI_ReadStatus, .-SPI_ReadStatus
 867              		.comm	SPI_swStatusRx,1,1
 868              		.comm	SPI_swStatusTx,1,1
 869              		.global	SPI_initVar
 870              		.bss
 871              		.set	.LANCHOR0,. + 0
 872              		.type	SPI_initVar, %object
 873              		.size	SPI_initVar, 1
 874              	SPI_initVar:
 875 0000 00       		.space	1
 876              		.text
 877              	.Letext0:
 878              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 879              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 880              		.file 4 "Generated_Source\\PSoC5\\SPI_IntClock.h"
 881              		.section	.debug_info,"",%progbits
 882              	.Ldebug_info0:
 883 0000 92050000 		.4byte	0x592
 884 0004 0400     		.2byte	0x4
 885 0006 00000000 		.4byte	.Ldebug_abbrev0
 886 000a 04       		.byte	0x4
 887 000b 01       		.uleb128 0x1
 888 000c A4020000 		.4byte	.LASF60
 889 0010 0C       		.byte	0xc
 890 0011 10000000 		.4byte	.LASF61
 891 0015 14010000 		.4byte	.LASF62
 892 0019 00000000 		.4byte	.Ldebug_ranges0+0
 893 001d 00000000 		.4byte	0
 894 0021 00000000 		.4byte	.Ldebug_line0
 895 0025 02       		.uleb128 0x2
 896 0026 01       		.byte	0x1
 897 0027 06       		.byte	0x6
 898 0028 BD000000 		.4byte	.LASF0
 899 002c 02       		.uleb128 0x2
 900 002d 01       		.byte	0x1
 901 002e 08       		.byte	0x8
 902 002f 71020000 		.4byte	.LASF1
 903 0033 02       		.uleb128 0x2
 904 0034 02       		.byte	0x2
 905 0035 05       		.byte	0x5
 906 0036 88020000 		.4byte	.LASF2
 907 003a 02       		.uleb128 0x2
 908 003b 02       		.byte	0x2
 909 003c 07       		.byte	0x7
 910 003d 76010000 		.4byte	.LASF3
 911 0041 02       		.uleb128 0x2
 912 0042 04       		.byte	0x4
 913 0043 05       		.byte	0x5
 914 0044 C9000000 		.4byte	.LASF4
 915 0048 02       		.uleb128 0x2
 916 0049 04       		.byte	0x4
 917 004a 07       		.byte	0x7
 918 004b 48010000 		.4byte	.LASF5
 919 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 38


 920 0050 08       		.byte	0x8
 921 0051 05       		.byte	0x5
 922 0052 AF000000 		.4byte	.LASF6
 923 0056 02       		.uleb128 0x2
 924 0057 08       		.byte	0x8
 925 0058 07       		.byte	0x7
 926 0059 8E000000 		.4byte	.LASF7
 927 005d 03       		.uleb128 0x3
 928 005e 04       		.byte	0x4
 929 005f 05       		.byte	0x5
 930 0060 696E7400 		.ascii	"int\000"
 931 0064 02       		.uleb128 0x2
 932 0065 04       		.byte	0x4
 933 0066 07       		.byte	0x7
 934 0067 3B010000 		.4byte	.LASF8
 935 006b 04       		.uleb128 0x4
 936 006c E1000000 		.4byte	.LASF9
 937 0070 02       		.byte	0x2
 938 0071 E401     		.2byte	0x1e4
 939 0073 2C000000 		.4byte	0x2c
 940 0077 04       		.uleb128 0x4
 941 0078 0D010000 		.4byte	.LASF10
 942 007c 02       		.byte	0x2
 943 007d E601     		.2byte	0x1e6
 944 007f 48000000 		.4byte	0x48
 945 0083 02       		.uleb128 0x2
 946 0084 04       		.byte	0x4
 947 0085 04       		.byte	0x4
 948 0086 5C020000 		.4byte	.LASF11
 949 008a 02       		.uleb128 0x2
 950 008b 08       		.byte	0x8
 951 008c 04       		.byte	0x4
 952 008d E7000000 		.4byte	.LASF12
 953 0091 02       		.uleb128 0x2
 954 0092 01       		.byte	0x1
 955 0093 08       		.byte	0x8
 956 0094 8B030000 		.4byte	.LASF13
 957 0098 04       		.uleb128 0x4
 958 0099 6C020000 		.4byte	.LASF14
 959 009d 02       		.byte	0x2
 960 009e 8E02     		.2byte	0x28e
 961 00a0 A4000000 		.4byte	0xa4
 962 00a4 05       		.uleb128 0x5
 963 00a5 6B000000 		.4byte	0x6b
 964 00a9 04       		.uleb128 0x4
 965 00aa F2010000 		.4byte	.LASF15
 966 00ae 02       		.byte	0x2
 967 00af 9002     		.2byte	0x290
 968 00b1 B5000000 		.4byte	0xb5
 969 00b5 05       		.uleb128 0x5
 970 00b6 77000000 		.4byte	0x77
 971 00ba 02       		.uleb128 0x2
 972 00bb 08       		.byte	0x8
 973 00bc 04       		.byte	0x4
 974 00bd 2F020000 		.4byte	.LASF16
 975 00c1 02       		.uleb128 0x2
 976 00c2 04       		.byte	0x4
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 39


 977 00c3 07       		.byte	0x7
 978 00c4 1A020000 		.4byte	.LASF17
 979 00c8 06       		.uleb128 0x6
 980 00c9 00000000 		.4byte	.LASF18
 981 00cd 01       		.byte	0x1
 982 00ce E3       		.byte	0xe3
 983 00cf 00000000 		.4byte	.LFB4
 984 00d3 0C000000 		.4byte	.LFE4-.LFB4
 985 00d7 01       		.uleb128 0x1
 986 00d8 9C       		.byte	0x9c
 987 00d9 06       		.uleb128 0x6
 988 00da 69030000 		.4byte	.LASF19
 989 00de 01       		.byte	0x1
 990 00df FC       		.byte	0xfc
 991 00e0 00000000 		.4byte	.LFB5
 992 00e4 0C000000 		.4byte	.LFE5-.LFB5
 993 00e8 01       		.uleb128 0x1
 994 00e9 9C       		.byte	0x9c
 995 00ea 07       		.uleb128 0x7
 996 00eb C8030000 		.4byte	.LASF22
 997 00ef 01       		.byte	0x1
 998 00f0 78       		.byte	0x78
 999 00f1 00000000 		.4byte	.LFB1
 1000 00f5 40000000 		.4byte	.LFE1-.LFB1
 1001 00f9 01       		.uleb128 0x1
 1002 00fa 9C       		.byte	0x9c
 1003 00fb 3C010000 		.4byte	0x13c
 1004 00ff 08       		.uleb128 0x8
 1005 0100 A8030000 		.4byte	.LASF24
 1006 0104 01       		.byte	0x1
 1007 0105 7A       		.byte	0x7a
 1008 0106 6B000000 		.4byte	0x6b
 1009 010a 00000000 		.4byte	.LLST0
 1010 010e 09       		.uleb128 0x9
 1011 010f 06000000 		.4byte	.LVL0
 1012 0113 53050000 		.4byte	0x553
 1013 0117 09       		.uleb128 0x9
 1014 0118 2C000000 		.4byte	.LVL1
 1015 011c 5E050000 		.4byte	0x55e
 1016 0120 09       		.uleb128 0x9
 1017 0121 30000000 		.4byte	.LVL2
 1018 0125 69050000 		.4byte	0x569
 1019 0129 09       		.uleb128 0x9
 1020 012a 34000000 		.4byte	.LVL3
 1021 012e C8000000 		.4byte	0xc8
 1022 0132 09       		.uleb128 0x9
 1023 0133 38000000 		.4byte	.LVL4
 1024 0137 D9000000 		.4byte	0xd9
 1025 013b 00       		.byte	0
 1026 013c 0A       		.uleb128 0xa
 1027 013d 09020000 		.4byte	.LASF20
 1028 0141 01       		.byte	0x1
 1029 0142 1501     		.2byte	0x115
 1030 0144 00000000 		.4byte	.LFB6
 1031 0148 0C000000 		.4byte	.LFE6-.LFB6
 1032 014c 01       		.uleb128 0x1
 1033 014d 9C       		.byte	0x9c
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 40


 1034 014e 0A       		.uleb128 0xa
 1035 014f EE000000 		.4byte	.LASF21
 1036 0153 01       		.byte	0x1
 1037 0154 2E01     		.2byte	0x12e
 1038 0156 00000000 		.4byte	.LFB7
 1039 015a 0C000000 		.4byte	.LFE7-.LFB7
 1040 015e 01       		.uleb128 0x1
 1041 015f 9C       		.byte	0x9c
 1042 0160 07       		.uleb128 0x7
 1043 0161 7F020000 		.4byte	.LASF23
 1044 0165 01       		.byte	0x1
 1045 0166 C0       		.byte	0xc0
 1046 0167 00000000 		.4byte	.LFB3
 1047 016b 34000000 		.4byte	.LFE3-.LFB3
 1048 016f 01       		.uleb128 0x1
 1049 0170 9C       		.byte	0x9c
 1050 0171 B2010000 		.4byte	0x1b2
 1051 0175 08       		.uleb128 0x8
 1052 0176 A8030000 		.4byte	.LASF24
 1053 017a 01       		.byte	0x1
 1054 017b C2       		.byte	0xc2
 1055 017c 6B000000 		.4byte	0x6b
 1056 0180 13000000 		.4byte	.LLST1
 1057 0184 09       		.uleb128 0x9
 1058 0185 06000000 		.4byte	.LVL5
 1059 0189 53050000 		.4byte	0x553
 1060 018d 09       		.uleb128 0x9
 1061 018e 20000000 		.4byte	.LVL6
 1062 0192 5E050000 		.4byte	0x55e
 1063 0196 09       		.uleb128 0x9
 1064 0197 24000000 		.4byte	.LVL7
 1065 019b 74050000 		.4byte	0x574
 1066 019f 09       		.uleb128 0x9
 1067 01a0 28000000 		.4byte	.LVL8
 1068 01a4 3C010000 		.4byte	0x13c
 1069 01a8 09       		.uleb128 0x9
 1070 01a9 2C000000 		.4byte	.LVL9
 1071 01ad 4E010000 		.4byte	0x14e
 1072 01b1 00       		.byte	0
 1073 01b2 0B       		.uleb128 0xb
 1074 01b3 D3030000 		.4byte	.LASF25
 1075 01b7 01       		.byte	0x1
 1076 01b8 4801     		.2byte	0x148
 1077 01ba 00000000 		.4byte	.LFB8
 1078 01be 0C000000 		.4byte	.LFE8-.LFB8
 1079 01c2 01       		.uleb128 0x1
 1080 01c3 9C       		.byte	0x9c
 1081 01c4 D7010000 		.4byte	0x1d7
 1082 01c8 0C       		.uleb128 0xc
 1083 01c9 A1010000 		.4byte	.LASF27
 1084 01cd 01       		.byte	0x1
 1085 01ce 4801     		.2byte	0x148
 1086 01d0 6B000000 		.4byte	0x6b
 1087 01d4 01       		.uleb128 0x1
 1088 01d5 50       		.byte	0x50
 1089 01d6 00       		.byte	0
 1090 01d7 0B       		.uleb128 0xb
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 41


 1091 01d8 3C030000 		.4byte	.LASF26
 1092 01dc 01       		.byte	0x1
 1093 01dd 6001     		.2byte	0x160
 1094 01df 00000000 		.4byte	.LFB9
 1095 01e3 0C000000 		.4byte	.LFE9-.LFB9
 1096 01e7 01       		.uleb128 0x1
 1097 01e8 9C       		.byte	0x9c
 1098 01e9 FC010000 		.4byte	0x1fc
 1099 01ed 0C       		.uleb128 0xc
 1100 01ee A1010000 		.4byte	.LASF27
 1101 01f2 01       		.byte	0x1
 1102 01f3 6001     		.2byte	0x160
 1103 01f5 6B000000 		.4byte	0x6b
 1104 01f9 01       		.uleb128 0x1
 1105 01fa 50       		.byte	0x50
 1106 01fb 00       		.byte	0
 1107 01fc 0D       		.uleb128 0xd
 1108 01fd F8010000 		.4byte	.LASF29
 1109 0201 01       		.byte	0x1
 1110 0202 8201     		.2byte	0x182
 1111 0204 6B000000 		.4byte	0x6b
 1112 0208 00000000 		.4byte	.LFB10
 1113 020c 0C000000 		.4byte	.LFE10-.LFB10
 1114 0210 01       		.uleb128 0x1
 1115 0211 9C       		.byte	0x9c
 1116 0212 25020000 		.4byte	0x225
 1117 0216 0E       		.uleb128 0xe
 1118 0217 A5000000 		.4byte	.LASF28
 1119 021b 01       		.byte	0x1
 1120 021c 8401     		.2byte	0x184
 1121 021e 6B000000 		.4byte	0x6b
 1122 0222 01       		.uleb128 0x1
 1123 0223 50       		.byte	0x50
 1124 0224 00       		.byte	0
 1125 0225 0D       		.uleb128 0xd
 1126 0226 90030000 		.4byte	.LASF30
 1127 022a 01       		.byte	0x1
 1128 022b B501     		.2byte	0x1b5
 1129 022d 6B000000 		.4byte	0x6b
 1130 0231 00000000 		.4byte	.LFB11
 1131 0235 0C000000 		.4byte	.LFE11-.LFB11
 1132 0239 01       		.uleb128 0x1
 1133 023a 9C       		.byte	0x9c
 1134 023b 4E020000 		.4byte	0x24e
 1135 023f 0E       		.uleb128 0xe
 1136 0240 A5000000 		.4byte	.LASF28
 1137 0244 01       		.byte	0x1
 1138 0245 B701     		.2byte	0x1b7
 1139 0247 6B000000 		.4byte	0x6b
 1140 024b 01       		.uleb128 0x1
 1141 024c 50       		.byte	0x50
 1142 024d 00       		.byte	0
 1143 024e 0B       		.uleb128 0xb
 1144 024f 3B020000 		.4byte	.LASF31
 1145 0253 01       		.byte	0x1
 1146 0254 EE01     		.2byte	0x1ee
 1147 0256 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 42


 1148 025a 18000000 		.4byte	.LFE12-.LFB12
 1149 025e 01       		.uleb128 0x1
 1150 025f 9C       		.byte	0x9c
 1151 0260 73020000 		.4byte	0x273
 1152 0264 0C       		.uleb128 0xc
 1153 0265 EA030000 		.4byte	.LASF32
 1154 0269 01       		.byte	0x1
 1155 026a EE01     		.2byte	0x1ee
 1156 026c 6B000000 		.4byte	0x6b
 1157 0270 01       		.uleb128 0x1
 1158 0271 50       		.byte	0x50
 1159 0272 00       		.byte	0
 1160 0273 0D       		.uleb128 0xd
 1161 0274 B9030000 		.4byte	.LASF33
 1162 0278 01       		.byte	0x1
 1163 0279 5A02     		.2byte	0x25a
 1164 027b 6B000000 		.4byte	0x6b
 1165 027f 00000000 		.4byte	.LFB13
 1166 0283 0C000000 		.4byte	.LFE13-.LFB13
 1167 0287 01       		.uleb128 0x1
 1168 0288 9C       		.byte	0x9c
 1169 0289 9C020000 		.4byte	0x29c
 1170 028d 0E       		.uleb128 0xe
 1171 028e 62030000 		.4byte	.LASF34
 1172 0292 01       		.byte	0x1
 1173 0293 5C02     		.2byte	0x25c
 1174 0295 6B000000 		.4byte	0x6b
 1175 0299 01       		.uleb128 0x1
 1176 029a 50       		.byte	0x50
 1177 029b 00       		.byte	0
 1178 029c 0D       		.uleb128 0xd
 1179 029d 43000000 		.4byte	.LASF35
 1180 02a1 01       		.byte	0x1
 1181 02a2 9A02     		.2byte	0x29a
 1182 02a4 6B000000 		.4byte	0x6b
 1183 02a8 00000000 		.4byte	.LFB14
 1184 02ac 18000000 		.4byte	.LFE14-.LFB14
 1185 02b0 01       		.uleb128 0x1
 1186 02b1 9C       		.byte	0x9c
 1187 02b2 C5020000 		.4byte	0x2c5
 1188 02b6 0E       		.uleb128 0xe
 1189 02b7 71010000 		.4byte	.LASF36
 1190 02bb 01       		.byte	0x1
 1191 02bc 9C02     		.2byte	0x29c
 1192 02be 6B000000 		.4byte	0x6b
 1193 02c2 01       		.uleb128 0x1
 1194 02c3 50       		.byte	0x50
 1195 02c4 00       		.byte	0
 1196 02c5 0D       		.uleb128 0xd
 1197 02c6 BB010000 		.4byte	.LASF37
 1198 02ca 01       		.byte	0x1
 1199 02cb D702     		.2byte	0x2d7
 1200 02cd 6B000000 		.4byte	0x6b
 1201 02d1 00000000 		.4byte	.LFB15
 1202 02d5 24000000 		.4byte	.LFE15-.LFB15
 1203 02d9 01       		.uleb128 0x1
 1204 02da 9C       		.byte	0x9c
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 43


 1205 02db F0020000 		.4byte	0x2f0
 1206 02df 0F       		.uleb128 0xf
 1207 02e0 71010000 		.4byte	.LASF36
 1208 02e4 01       		.byte	0x1
 1209 02e5 D902     		.2byte	0x2d9
 1210 02e7 6B000000 		.4byte	0x6b
 1211 02eb 26000000 		.4byte	.LLST2
 1212 02ef 00       		.byte	0
 1213 02f0 0A       		.uleb128 0xa
 1214 02f1 7C000000 		.4byte	.LASF38
 1215 02f5 01       		.byte	0x1
 1216 02f6 2603     		.2byte	0x326
 1217 02f8 00000000 		.4byte	.LFB16
 1218 02fc 1C000000 		.4byte	.LFE16-.LFB16
 1219 0300 01       		.uleb128 0x1
 1220 0301 9C       		.byte	0x9c
 1221 0302 0B       		.uleb128 0xb
 1222 0303 79030000 		.4byte	.LASF39
 1223 0307 01       		.byte	0x1
 1224 0308 5D03     		.2byte	0x35d
 1225 030a 00000000 		.4byte	.LFB17
 1226 030e 24000000 		.4byte	.LFE17-.LFB17
 1227 0312 01       		.uleb128 0x1
 1228 0313 9C       		.byte	0x9c
 1229 0314 3B030000 		.4byte	0x33b
 1230 0318 0F       		.uleb128 0xf
 1231 0319 A8030000 		.4byte	.LASF24
 1232 031d 01       		.byte	0x1
 1233 031e 5F03     		.2byte	0x35f
 1234 0320 6B000000 		.4byte	0x6b
 1235 0324 44000000 		.4byte	.LLST3
 1236 0328 09       		.uleb128 0x9
 1237 0329 06000000 		.4byte	.LVL19
 1238 032d 53050000 		.4byte	0x553
 1239 0331 09       		.uleb128 0x9
 1240 0332 1C000000 		.4byte	.LVL20
 1241 0336 5E050000 		.4byte	0x55e
 1242 033a 00       		.byte	0
 1243 033b 0B       		.uleb128 0xb
 1244 033c 6F000000 		.4byte	.LASF40
 1245 0340 01       		.byte	0x1
 1246 0341 C203     		.2byte	0x3c2
 1247 0343 00000000 		.4byte	.LFB18
 1248 0347 1E000000 		.4byte	.LFE18-.LFB18
 1249 034b 01       		.uleb128 0x1
 1250 034c 9C       		.byte	0x9c
 1251 034d 8B030000 		.4byte	0x38b
 1252 0351 10       		.uleb128 0x10
 1253 0352 A1030000 		.4byte	.LASF41
 1254 0356 01       		.byte	0x1
 1255 0357 C203     		.2byte	0x3c2
 1256 0359 8B030000 		.4byte	0x38b
 1257 035d 57000000 		.4byte	.LLST4
 1258 0361 10       		.uleb128 0x10
 1259 0362 32030000 		.4byte	.LASF42
 1260 0366 01       		.byte	0x1
 1261 0367 C203     		.2byte	0x3c2
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 44


 1262 0369 6B000000 		.4byte	0x6b
 1263 036d 75000000 		.4byte	.LLST5
 1264 0371 0F       		.uleb128 0xf
 1265 0372 98010000 		.4byte	.LASF43
 1266 0376 01       		.byte	0x1
 1267 0377 C503     		.2byte	0x3c5
 1268 0379 6B000000 		.4byte	0x6b
 1269 037d 9E000000 		.4byte	.LLST6
 1270 0381 09       		.uleb128 0x9
 1271 0382 10000000 		.4byte	.LVL24
 1272 0386 4E020000 		.4byte	0x24e
 1273 038a 00       		.byte	0
 1274 038b 11       		.uleb128 0x11
 1275 038c 04       		.byte	0x4
 1276 038d 91030000 		.4byte	0x391
 1277 0391 12       		.uleb128 0x12
 1278 0392 6B000000 		.4byte	0x6b
 1279 0396 0B       		.uleb128 0xb
 1280 0397 FF000000 		.4byte	.LASF44
 1281 039b 01       		.byte	0x1
 1282 039c E303     		.2byte	0x3e3
 1283 039e 00000000 		.4byte	.LFB19
 1284 03a2 3C000000 		.4byte	.LFE19-.LFB19
 1285 03a6 01       		.uleb128 0x1
 1286 03a7 9C       		.byte	0x9c
 1287 03a8 CF030000 		.4byte	0x3cf
 1288 03ac 0F       		.uleb128 0xf
 1289 03ad A8030000 		.4byte	.LASF24
 1290 03b1 01       		.byte	0x1
 1291 03b2 E503     		.2byte	0x3e5
 1292 03b4 6B000000 		.4byte	0x6b
 1293 03b8 C8000000 		.4byte	.LLST7
 1294 03bc 09       		.uleb128 0x9
 1295 03bd 16000000 		.4byte	.LVL29
 1296 03c1 53050000 		.4byte	0x553
 1297 03c5 09       		.uleb128 0x9
 1298 03c6 2C000000 		.4byte	.LVL30
 1299 03ca 5E050000 		.4byte	0x55e
 1300 03ce 00       		.byte	0
 1301 03cf 07       		.uleb128 0x7
 1302 03d0 66000000 		.4byte	.LASF45
 1303 03d4 01       		.byte	0x1
 1304 03d5 3F       		.byte	0x3f
 1305 03d6 00000000 		.4byte	.LFB0
 1306 03da 64000000 		.4byte	.LFE0-.LFB0
 1307 03de 01       		.uleb128 0x1
 1308 03df 9C       		.byte	0x9c
 1309 03e0 56040000 		.4byte	0x456
 1310 03e4 13       		.uleb128 0x13
 1311 03e5 16000000 		.4byte	.LVL31
 1312 03e9 7F050000 		.4byte	0x57f
 1313 03ed FC030000 		.4byte	0x3fc
 1314 03f1 14       		.uleb128 0x14
 1315 03f2 01       		.uleb128 0x1
 1316 03f3 50       		.byte	0x50
 1317 03f4 01       		.uleb128 0x1
 1318 03f5 31       		.byte	0x31
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 45


 1319 03f6 14       		.uleb128 0x14
 1320 03f7 01       		.uleb128 0x1
 1321 03f8 51       		.byte	0x51
 1322 03f9 01       		.uleb128 0x1
 1323 03fa 37       		.byte	0x37
 1324 03fb 00       		.byte	0
 1325 03fc 13       		.uleb128 0x13
 1326 03fd 1E000000 		.4byte	.LVL32
 1327 0401 8A050000 		.4byte	0x58a
 1328 0405 0F040000 		.4byte	0x40f
 1329 0409 14       		.uleb128 0x14
 1330 040a 01       		.uleb128 0x1
 1331 040b 50       		.byte	0x50
 1332 040c 01       		.uleb128 0x1
 1333 040d 31       		.byte	0x31
 1334 040e 00       		.byte	0
 1335 040f 13       		.uleb128 0x13
 1336 0410 2A000000 		.4byte	.LVL33
 1337 0414 7F050000 		.4byte	0x57f
 1338 0418 27040000 		.4byte	0x427
 1339 041c 14       		.uleb128 0x14
 1340 041d 01       		.uleb128 0x1
 1341 041e 50       		.byte	0x50
 1342 041f 01       		.uleb128 0x1
 1343 0420 30       		.byte	0x30
 1344 0421 14       		.uleb128 0x14
 1345 0422 01       		.uleb128 0x1
 1346 0423 51       		.byte	0x51
 1347 0424 01       		.uleb128 0x1
 1348 0425 37       		.byte	0x37
 1349 0426 00       		.byte	0
 1350 0427 13       		.uleb128 0x13
 1351 0428 32000000 		.4byte	.LVL34
 1352 042c 8A050000 		.4byte	0x58a
 1353 0430 3A040000 		.4byte	0x43a
 1354 0434 14       		.uleb128 0x14
 1355 0435 01       		.uleb128 0x1
 1356 0436 50       		.byte	0x50
 1357 0437 01       		.uleb128 0x1
 1358 0438 30       		.byte	0x30
 1359 0439 00       		.byte	0
 1360 043a 09       		.uleb128 0x9
 1361 043b 36000000 		.4byte	.LVL35
 1362 043f 96030000 		.4byte	0x396
 1363 0443 09       		.uleb128 0x9
 1364 0444 3A000000 		.4byte	.LVL36
 1365 0448 FC010000 		.4byte	0x1fc
 1366 044c 09       		.uleb128 0x9
 1367 044d 3E000000 		.4byte	.LVL37
 1368 0451 25020000 		.4byte	0x225
 1369 0455 00       		.byte	0
 1370 0456 07       		.uleb128 0x7
 1371 0457 62020000 		.4byte	.LASF46
 1372 045b 01       		.byte	0x1
 1373 045c A3       		.byte	0xa3
 1374 045d 00000000 		.4byte	.LFB2
 1375 0461 1C000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 46


 1376 0465 01       		.uleb128 0x1
 1377 0466 9C       		.byte	0x9c
 1378 0467 7E040000 		.4byte	0x47e
 1379 046b 09       		.uleb128 0x9
 1380 046c 0C000000 		.4byte	.LVL38
 1381 0470 CF030000 		.4byte	0x3cf
 1382 0474 09       		.uleb128 0x9
 1383 0475 16000000 		.4byte	.LVL39
 1384 0479 EA000000 		.4byte	0xea
 1385 047d 00       		.byte	0
 1386 047e 0B       		.uleb128 0xb
 1387 047f E4010000 		.4byte	.LASF47
 1388 0483 01       		.byte	0x1
 1389 0484 1104     		.2byte	0x411
 1390 0486 00000000 		.4byte	.LFB20
 1391 048a 0C000000 		.4byte	.LFE20-.LFB20
 1392 048e 01       		.uleb128 0x1
 1393 048f 9C       		.byte	0x9c
 1394 0490 A7040000 		.4byte	0x4a7
 1395 0494 09       		.uleb128 0x9
 1396 0495 06000000 		.4byte	.LVL40
 1397 0499 D9000000 		.4byte	0xd9
 1398 049d 09       		.uleb128 0x9
 1399 049e 0A000000 		.4byte	.LVL41
 1400 04a2 C8000000 		.4byte	0xc8
 1401 04a6 00       		.byte	0
 1402 04a7 0B       		.uleb128 0xb
 1403 04a8 D2000000 		.4byte	.LASF48
 1404 04ac 01       		.byte	0x1
 1405 04ad 2904     		.2byte	0x429
 1406 04af 00000000 		.4byte	.LFB21
 1407 04b3 0C000000 		.4byte	.LFE21-.LFB21
 1408 04b7 01       		.uleb128 0x1
 1409 04b8 9C       		.byte	0x9c
 1410 04b9 D0040000 		.4byte	0x4d0
 1411 04bd 09       		.uleb128 0x9
 1412 04be 06000000 		.4byte	.LVL42
 1413 04c2 3C010000 		.4byte	0x13c
 1414 04c6 09       		.uleb128 0x9
 1415 04c7 0A000000 		.4byte	.LVL43
 1416 04cb 4E010000 		.4byte	0x14e
 1417 04cf 00       		.byte	0
 1418 04d0 0B       		.uleb128 0xb
 1419 04d1 CF010000 		.4byte	.LASF49
 1420 04d5 01       		.byte	0x1
 1421 04d6 4204     		.2byte	0x442
 1422 04d8 00000000 		.4byte	.LFB22
 1423 04dc 14000000 		.4byte	.LFE22-.LFB22
 1424 04e0 01       		.uleb128 0x1
 1425 04e1 9C       		.byte	0x9c
 1426 04e2 F5040000 		.4byte	0x4f5
 1427 04e6 0C       		.uleb128 0xc
 1428 04e7 A1010000 		.4byte	.LASF27
 1429 04eb 01       		.byte	0x1
 1430 04ec 4204     		.2byte	0x442
 1431 04ee 6B000000 		.4byte	0x6b
 1432 04f2 01       		.uleb128 0x1
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 47


 1433 04f3 50       		.byte	0x50
 1434 04f4 00       		.byte	0
 1435 04f5 0D       		.uleb128 0xd
 1436 04f6 57000000 		.4byte	.LASF50
 1437 04fa 01       		.byte	0x1
 1438 04fb 6504     		.2byte	0x465
 1439 04fd 6B000000 		.4byte	0x6b
 1440 0501 00000000 		.4byte	.LFB23
 1441 0505 18000000 		.4byte	.LFE23-.LFB23
 1442 0509 01       		.uleb128 0x1
 1443 050a 9C       		.byte	0x9c
 1444 050b 20050000 		.4byte	0x520
 1445 050f 0F       		.uleb128 0xf
 1446 0510 A5000000 		.4byte	.LASF28
 1447 0514 01       		.byte	0x1
 1448 0515 6704     		.2byte	0x467
 1449 0517 6B000000 		.4byte	0x6b
 1450 051b DB000000 		.4byte	.LLST8
 1451 051f 00       		.byte	0
 1452 0520 15       		.uleb128 0x15
 1453 0521 23020000 		.4byte	.LASF51
 1454 0525 01       		.byte	0x1
 1455 0526 22       		.byte	0x22
 1456 0527 6B000000 		.4byte	0x6b
 1457 052b 05       		.uleb128 0x5
 1458 052c 03       		.byte	0x3
 1459 052d 00000000 		.4byte	SPI_initVar
 1460 0531 15       		.uleb128 0x15
 1461 0532 F1030000 		.4byte	.LASF52
 1462 0536 01       		.byte	0x1
 1463 0537 24       		.byte	0x24
 1464 0538 A4000000 		.4byte	0xa4
 1465 053c 05       		.uleb128 0x5
 1466 053d 03       		.byte	0x3
 1467 053e 00000000 		.4byte	SPI_swStatusTx
 1468 0542 15       		.uleb128 0x15
 1469 0543 53030000 		.4byte	.LASF53
 1470 0547 01       		.byte	0x1
 1471 0548 25       		.byte	0x25
 1472 0549 A4000000 		.4byte	0xa4
 1473 054d 05       		.uleb128 0x5
 1474 054e 03       		.byte	0x3
 1475 054f 00000000 		.4byte	SPI_swStatusRx
 1476 0553 16       		.uleb128 0x16
 1477 0554 5A010000 		.4byte	.LASF54
 1478 0558 5A010000 		.4byte	.LASF54
 1479 055c 03       		.byte	0x3
 1480 055d 7D       		.byte	0x7d
 1481 055e 16       		.uleb128 0x16
 1482 055f 2D000000 		.4byte	.LASF55
 1483 0563 2D000000 		.4byte	.LASF55
 1484 0567 03       		.byte	0x3
 1485 0568 7E       		.byte	0x7e
 1486 0569 16       		.uleb128 0x16
 1487 056a A8010000 		.4byte	.LASF56
 1488 056e A8010000 		.4byte	.LASF56
 1489 0572 04       		.byte	0x4
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 48


 1490 0573 27       		.byte	0x27
 1491 0574 16       		.uleb128 0x16
 1492 0575 92020000 		.4byte	.LASF57
 1493 0579 92020000 		.4byte	.LASF57
 1494 057d 04       		.byte	0x4
 1495 057e 28       		.byte	0x28
 1496 057f 16       		.uleb128 0x16
 1497 0580 4B020000 		.4byte	.LASF58
 1498 0584 4B020000 		.4byte	.LASF58
 1499 0588 03       		.byte	0x3
 1500 0589 8B       		.byte	0x8b
 1501 058a 16       		.uleb128 0x16
 1502 058b 89010000 		.4byte	.LASF59
 1503 058f 89010000 		.4byte	.LASF59
 1504 0593 03       		.byte	0x3
 1505 0594 88       		.byte	0x88
 1506 0595 00       		.byte	0
 1507              		.section	.debug_abbrev,"",%progbits
 1508              	.Ldebug_abbrev0:
 1509 0000 01       		.uleb128 0x1
 1510 0001 11       		.uleb128 0x11
 1511 0002 01       		.byte	0x1
 1512 0003 25       		.uleb128 0x25
 1513 0004 0E       		.uleb128 0xe
 1514 0005 13       		.uleb128 0x13
 1515 0006 0B       		.uleb128 0xb
 1516 0007 03       		.uleb128 0x3
 1517 0008 0E       		.uleb128 0xe
 1518 0009 1B       		.uleb128 0x1b
 1519 000a 0E       		.uleb128 0xe
 1520 000b 55       		.uleb128 0x55
 1521 000c 17       		.uleb128 0x17
 1522 000d 11       		.uleb128 0x11
 1523 000e 01       		.uleb128 0x1
 1524 000f 10       		.uleb128 0x10
 1525 0010 17       		.uleb128 0x17
 1526 0011 00       		.byte	0
 1527 0012 00       		.byte	0
 1528 0013 02       		.uleb128 0x2
 1529 0014 24       		.uleb128 0x24
 1530 0015 00       		.byte	0
 1531 0016 0B       		.uleb128 0xb
 1532 0017 0B       		.uleb128 0xb
 1533 0018 3E       		.uleb128 0x3e
 1534 0019 0B       		.uleb128 0xb
 1535 001a 03       		.uleb128 0x3
 1536 001b 0E       		.uleb128 0xe
 1537 001c 00       		.byte	0
 1538 001d 00       		.byte	0
 1539 001e 03       		.uleb128 0x3
 1540 001f 24       		.uleb128 0x24
 1541 0020 00       		.byte	0
 1542 0021 0B       		.uleb128 0xb
 1543 0022 0B       		.uleb128 0xb
 1544 0023 3E       		.uleb128 0x3e
 1545 0024 0B       		.uleb128 0xb
 1546 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 49


 1547 0026 08       		.uleb128 0x8
 1548 0027 00       		.byte	0
 1549 0028 00       		.byte	0
 1550 0029 04       		.uleb128 0x4
 1551 002a 16       		.uleb128 0x16
 1552 002b 00       		.byte	0
 1553 002c 03       		.uleb128 0x3
 1554 002d 0E       		.uleb128 0xe
 1555 002e 3A       		.uleb128 0x3a
 1556 002f 0B       		.uleb128 0xb
 1557 0030 3B       		.uleb128 0x3b
 1558 0031 05       		.uleb128 0x5
 1559 0032 49       		.uleb128 0x49
 1560 0033 13       		.uleb128 0x13
 1561 0034 00       		.byte	0
 1562 0035 00       		.byte	0
 1563 0036 05       		.uleb128 0x5
 1564 0037 35       		.uleb128 0x35
 1565 0038 00       		.byte	0
 1566 0039 49       		.uleb128 0x49
 1567 003a 13       		.uleb128 0x13
 1568 003b 00       		.byte	0
 1569 003c 00       		.byte	0
 1570 003d 06       		.uleb128 0x6
 1571 003e 2E       		.uleb128 0x2e
 1572 003f 00       		.byte	0
 1573 0040 3F       		.uleb128 0x3f
 1574 0041 19       		.uleb128 0x19
 1575 0042 03       		.uleb128 0x3
 1576 0043 0E       		.uleb128 0xe
 1577 0044 3A       		.uleb128 0x3a
 1578 0045 0B       		.uleb128 0xb
 1579 0046 3B       		.uleb128 0x3b
 1580 0047 0B       		.uleb128 0xb
 1581 0048 27       		.uleb128 0x27
 1582 0049 19       		.uleb128 0x19
 1583 004a 11       		.uleb128 0x11
 1584 004b 01       		.uleb128 0x1
 1585 004c 12       		.uleb128 0x12
 1586 004d 06       		.uleb128 0x6
 1587 004e 40       		.uleb128 0x40
 1588 004f 18       		.uleb128 0x18
 1589 0050 9742     		.uleb128 0x2117
 1590 0052 19       		.uleb128 0x19
 1591 0053 00       		.byte	0
 1592 0054 00       		.byte	0
 1593 0055 07       		.uleb128 0x7
 1594 0056 2E       		.uleb128 0x2e
 1595 0057 01       		.byte	0x1
 1596 0058 3F       		.uleb128 0x3f
 1597 0059 19       		.uleb128 0x19
 1598 005a 03       		.uleb128 0x3
 1599 005b 0E       		.uleb128 0xe
 1600 005c 3A       		.uleb128 0x3a
 1601 005d 0B       		.uleb128 0xb
 1602 005e 3B       		.uleb128 0x3b
 1603 005f 0B       		.uleb128 0xb
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 50


 1604 0060 27       		.uleb128 0x27
 1605 0061 19       		.uleb128 0x19
 1606 0062 11       		.uleb128 0x11
 1607 0063 01       		.uleb128 0x1
 1608 0064 12       		.uleb128 0x12
 1609 0065 06       		.uleb128 0x6
 1610 0066 40       		.uleb128 0x40
 1611 0067 18       		.uleb128 0x18
 1612 0068 9742     		.uleb128 0x2117
 1613 006a 19       		.uleb128 0x19
 1614 006b 01       		.uleb128 0x1
 1615 006c 13       		.uleb128 0x13
 1616 006d 00       		.byte	0
 1617 006e 00       		.byte	0
 1618 006f 08       		.uleb128 0x8
 1619 0070 34       		.uleb128 0x34
 1620 0071 00       		.byte	0
 1621 0072 03       		.uleb128 0x3
 1622 0073 0E       		.uleb128 0xe
 1623 0074 3A       		.uleb128 0x3a
 1624 0075 0B       		.uleb128 0xb
 1625 0076 3B       		.uleb128 0x3b
 1626 0077 0B       		.uleb128 0xb
 1627 0078 49       		.uleb128 0x49
 1628 0079 13       		.uleb128 0x13
 1629 007a 02       		.uleb128 0x2
 1630 007b 17       		.uleb128 0x17
 1631 007c 00       		.byte	0
 1632 007d 00       		.byte	0
 1633 007e 09       		.uleb128 0x9
 1634 007f 898201   		.uleb128 0x4109
 1635 0082 00       		.byte	0
 1636 0083 11       		.uleb128 0x11
 1637 0084 01       		.uleb128 0x1
 1638 0085 31       		.uleb128 0x31
 1639 0086 13       		.uleb128 0x13
 1640 0087 00       		.byte	0
 1641 0088 00       		.byte	0
 1642 0089 0A       		.uleb128 0xa
 1643 008a 2E       		.uleb128 0x2e
 1644 008b 00       		.byte	0
 1645 008c 3F       		.uleb128 0x3f
 1646 008d 19       		.uleb128 0x19
 1647 008e 03       		.uleb128 0x3
 1648 008f 0E       		.uleb128 0xe
 1649 0090 3A       		.uleb128 0x3a
 1650 0091 0B       		.uleb128 0xb
 1651 0092 3B       		.uleb128 0x3b
 1652 0093 05       		.uleb128 0x5
 1653 0094 27       		.uleb128 0x27
 1654 0095 19       		.uleb128 0x19
 1655 0096 11       		.uleb128 0x11
 1656 0097 01       		.uleb128 0x1
 1657 0098 12       		.uleb128 0x12
 1658 0099 06       		.uleb128 0x6
 1659 009a 40       		.uleb128 0x40
 1660 009b 18       		.uleb128 0x18
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 51


 1661 009c 9742     		.uleb128 0x2117
 1662 009e 19       		.uleb128 0x19
 1663 009f 00       		.byte	0
 1664 00a0 00       		.byte	0
 1665 00a1 0B       		.uleb128 0xb
 1666 00a2 2E       		.uleb128 0x2e
 1667 00a3 01       		.byte	0x1
 1668 00a4 3F       		.uleb128 0x3f
 1669 00a5 19       		.uleb128 0x19
 1670 00a6 03       		.uleb128 0x3
 1671 00a7 0E       		.uleb128 0xe
 1672 00a8 3A       		.uleb128 0x3a
 1673 00a9 0B       		.uleb128 0xb
 1674 00aa 3B       		.uleb128 0x3b
 1675 00ab 05       		.uleb128 0x5
 1676 00ac 27       		.uleb128 0x27
 1677 00ad 19       		.uleb128 0x19
 1678 00ae 11       		.uleb128 0x11
 1679 00af 01       		.uleb128 0x1
 1680 00b0 12       		.uleb128 0x12
 1681 00b1 06       		.uleb128 0x6
 1682 00b2 40       		.uleb128 0x40
 1683 00b3 18       		.uleb128 0x18
 1684 00b4 9742     		.uleb128 0x2117
 1685 00b6 19       		.uleb128 0x19
 1686 00b7 01       		.uleb128 0x1
 1687 00b8 13       		.uleb128 0x13
 1688 00b9 00       		.byte	0
 1689 00ba 00       		.byte	0
 1690 00bb 0C       		.uleb128 0xc
 1691 00bc 05       		.uleb128 0x5
 1692 00bd 00       		.byte	0
 1693 00be 03       		.uleb128 0x3
 1694 00bf 0E       		.uleb128 0xe
 1695 00c0 3A       		.uleb128 0x3a
 1696 00c1 0B       		.uleb128 0xb
 1697 00c2 3B       		.uleb128 0x3b
 1698 00c3 05       		.uleb128 0x5
 1699 00c4 49       		.uleb128 0x49
 1700 00c5 13       		.uleb128 0x13
 1701 00c6 02       		.uleb128 0x2
 1702 00c7 18       		.uleb128 0x18
 1703 00c8 00       		.byte	0
 1704 00c9 00       		.byte	0
 1705 00ca 0D       		.uleb128 0xd
 1706 00cb 2E       		.uleb128 0x2e
 1707 00cc 01       		.byte	0x1
 1708 00cd 3F       		.uleb128 0x3f
 1709 00ce 19       		.uleb128 0x19
 1710 00cf 03       		.uleb128 0x3
 1711 00d0 0E       		.uleb128 0xe
 1712 00d1 3A       		.uleb128 0x3a
 1713 00d2 0B       		.uleb128 0xb
 1714 00d3 3B       		.uleb128 0x3b
 1715 00d4 05       		.uleb128 0x5
 1716 00d5 27       		.uleb128 0x27
 1717 00d6 19       		.uleb128 0x19
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 52


 1718 00d7 49       		.uleb128 0x49
 1719 00d8 13       		.uleb128 0x13
 1720 00d9 11       		.uleb128 0x11
 1721 00da 01       		.uleb128 0x1
 1722 00db 12       		.uleb128 0x12
 1723 00dc 06       		.uleb128 0x6
 1724 00dd 40       		.uleb128 0x40
 1725 00de 18       		.uleb128 0x18
 1726 00df 9742     		.uleb128 0x2117
 1727 00e1 19       		.uleb128 0x19
 1728 00e2 01       		.uleb128 0x1
 1729 00e3 13       		.uleb128 0x13
 1730 00e4 00       		.byte	0
 1731 00e5 00       		.byte	0
 1732 00e6 0E       		.uleb128 0xe
 1733 00e7 34       		.uleb128 0x34
 1734 00e8 00       		.byte	0
 1735 00e9 03       		.uleb128 0x3
 1736 00ea 0E       		.uleb128 0xe
 1737 00eb 3A       		.uleb128 0x3a
 1738 00ec 0B       		.uleb128 0xb
 1739 00ed 3B       		.uleb128 0x3b
 1740 00ee 05       		.uleb128 0x5
 1741 00ef 49       		.uleb128 0x49
 1742 00f0 13       		.uleb128 0x13
 1743 00f1 02       		.uleb128 0x2
 1744 00f2 18       		.uleb128 0x18
 1745 00f3 00       		.byte	0
 1746 00f4 00       		.byte	0
 1747 00f5 0F       		.uleb128 0xf
 1748 00f6 34       		.uleb128 0x34
 1749 00f7 00       		.byte	0
 1750 00f8 03       		.uleb128 0x3
 1751 00f9 0E       		.uleb128 0xe
 1752 00fa 3A       		.uleb128 0x3a
 1753 00fb 0B       		.uleb128 0xb
 1754 00fc 3B       		.uleb128 0x3b
 1755 00fd 05       		.uleb128 0x5
 1756 00fe 49       		.uleb128 0x49
 1757 00ff 13       		.uleb128 0x13
 1758 0100 02       		.uleb128 0x2
 1759 0101 17       		.uleb128 0x17
 1760 0102 00       		.byte	0
 1761 0103 00       		.byte	0
 1762 0104 10       		.uleb128 0x10
 1763 0105 05       		.uleb128 0x5
 1764 0106 00       		.byte	0
 1765 0107 03       		.uleb128 0x3
 1766 0108 0E       		.uleb128 0xe
 1767 0109 3A       		.uleb128 0x3a
 1768 010a 0B       		.uleb128 0xb
 1769 010b 3B       		.uleb128 0x3b
 1770 010c 05       		.uleb128 0x5
 1771 010d 49       		.uleb128 0x49
 1772 010e 13       		.uleb128 0x13
 1773 010f 02       		.uleb128 0x2
 1774 0110 17       		.uleb128 0x17
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 53


 1775 0111 00       		.byte	0
 1776 0112 00       		.byte	0
 1777 0113 11       		.uleb128 0x11
 1778 0114 0F       		.uleb128 0xf
 1779 0115 00       		.byte	0
 1780 0116 0B       		.uleb128 0xb
 1781 0117 0B       		.uleb128 0xb
 1782 0118 49       		.uleb128 0x49
 1783 0119 13       		.uleb128 0x13
 1784 011a 00       		.byte	0
 1785 011b 00       		.byte	0
 1786 011c 12       		.uleb128 0x12
 1787 011d 26       		.uleb128 0x26
 1788 011e 00       		.byte	0
 1789 011f 49       		.uleb128 0x49
 1790 0120 13       		.uleb128 0x13
 1791 0121 00       		.byte	0
 1792 0122 00       		.byte	0
 1793 0123 13       		.uleb128 0x13
 1794 0124 898201   		.uleb128 0x4109
 1795 0127 01       		.byte	0x1
 1796 0128 11       		.uleb128 0x11
 1797 0129 01       		.uleb128 0x1
 1798 012a 31       		.uleb128 0x31
 1799 012b 13       		.uleb128 0x13
 1800 012c 01       		.uleb128 0x1
 1801 012d 13       		.uleb128 0x13
 1802 012e 00       		.byte	0
 1803 012f 00       		.byte	0
 1804 0130 14       		.uleb128 0x14
 1805 0131 8A8201   		.uleb128 0x410a
 1806 0134 00       		.byte	0
 1807 0135 02       		.uleb128 0x2
 1808 0136 18       		.uleb128 0x18
 1809 0137 9142     		.uleb128 0x2111
 1810 0139 18       		.uleb128 0x18
 1811 013a 00       		.byte	0
 1812 013b 00       		.byte	0
 1813 013c 15       		.uleb128 0x15
 1814 013d 34       		.uleb128 0x34
 1815 013e 00       		.byte	0
 1816 013f 03       		.uleb128 0x3
 1817 0140 0E       		.uleb128 0xe
 1818 0141 3A       		.uleb128 0x3a
 1819 0142 0B       		.uleb128 0xb
 1820 0143 3B       		.uleb128 0x3b
 1821 0144 0B       		.uleb128 0xb
 1822 0145 49       		.uleb128 0x49
 1823 0146 13       		.uleb128 0x13
 1824 0147 3F       		.uleb128 0x3f
 1825 0148 19       		.uleb128 0x19
 1826 0149 02       		.uleb128 0x2
 1827 014a 18       		.uleb128 0x18
 1828 014b 00       		.byte	0
 1829 014c 00       		.byte	0
 1830 014d 16       		.uleb128 0x16
 1831 014e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 54


 1832 014f 00       		.byte	0
 1833 0150 3F       		.uleb128 0x3f
 1834 0151 19       		.uleb128 0x19
 1835 0152 3C       		.uleb128 0x3c
 1836 0153 19       		.uleb128 0x19
 1837 0154 6E       		.uleb128 0x6e
 1838 0155 0E       		.uleb128 0xe
 1839 0156 03       		.uleb128 0x3
 1840 0157 0E       		.uleb128 0xe
 1841 0158 3A       		.uleb128 0x3a
 1842 0159 0B       		.uleb128 0xb
 1843 015a 3B       		.uleb128 0x3b
 1844 015b 0B       		.uleb128 0xb
 1845 015c 00       		.byte	0
 1846 015d 00       		.byte	0
 1847 015e 00       		.byte	0
 1848              		.section	.debug_loc,"",%progbits
 1849              	.Ldebug_loc0:
 1850              	.LLST0:
 1851 0000 06000000 		.4byte	.LVL0
 1852 0004 2B000000 		.4byte	.LVL1-1
 1853 0008 0100     		.2byte	0x1
 1854 000a 50       		.byte	0x50
 1855 000b 00000000 		.4byte	0
 1856 000f 00000000 		.4byte	0
 1857              	.LLST1:
 1858 0013 06000000 		.4byte	.LVL5
 1859 0017 1F000000 		.4byte	.LVL6-1
 1860 001b 0100     		.2byte	0x1
 1861 001d 50       		.byte	0x50
 1862 001e 00000000 		.4byte	0
 1863 0022 00000000 		.4byte	0
 1864              	.LLST2:
 1865 0026 06000000 		.4byte	.LVL17
 1866 002a 1C000000 		.4byte	.LVL18
 1867 002e 0100     		.2byte	0x1
 1868 0030 53       		.byte	0x53
 1869 0031 1C000000 		.4byte	.LVL18
 1870 0035 24000000 		.4byte	.LFE15
 1871 0039 0100     		.2byte	0x1
 1872 003b 50       		.byte	0x50
 1873 003c 00000000 		.4byte	0
 1874 0040 00000000 		.4byte	0
 1875              	.LLST3:
 1876 0044 06000000 		.4byte	.LVL19
 1877 0048 1B000000 		.4byte	.LVL20-1
 1878 004c 0100     		.2byte	0x1
 1879 004e 50       		.byte	0x50
 1880 004f 00000000 		.4byte	0
 1881 0053 00000000 		.4byte	0
 1882              	.LLST4:
 1883 0057 00000000 		.4byte	.LVL21
 1884 005b 0A000000 		.4byte	.LVL23
 1885 005f 0100     		.2byte	0x1
 1886 0061 50       		.byte	0x50
 1887 0062 0A000000 		.4byte	.LVL23
 1888 0066 1E000000 		.4byte	.LFE18
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 55


 1889 006a 0100     		.2byte	0x1
 1890 006c 56       		.byte	0x56
 1891 006d 00000000 		.4byte	0
 1892 0071 00000000 		.4byte	0
 1893              	.LLST5:
 1894 0075 00000000 		.4byte	.LVL21
 1895 0079 0A000000 		.4byte	.LVL23
 1896 007d 0100     		.2byte	0x1
 1897 007f 51       		.byte	0x51
 1898 0080 0A000000 		.4byte	.LVL23
 1899 0084 16000000 		.4byte	.LVL27
 1900 0088 0100     		.2byte	0x1
 1901 008a 54       		.byte	0x54
 1902 008b 18000000 		.4byte	.LVL28
 1903 008f 1E000000 		.4byte	.LFE18
 1904 0093 0100     		.2byte	0x1
 1905 0095 54       		.byte	0x54
 1906 0096 00000000 		.4byte	0
 1907 009a 00000000 		.4byte	0
 1908              	.LLST6:
 1909 009e 06000000 		.4byte	.LVL22
 1910 00a2 0A000000 		.4byte	.LVL23
 1911 00a6 0200     		.2byte	0x2
 1912 00a8 30       		.byte	0x30
 1913 00a9 9F       		.byte	0x9f
 1914 00aa 0A000000 		.4byte	.LVL23
 1915 00ae 12000000 		.4byte	.LVL25
 1916 00b2 0100     		.2byte	0x1
 1917 00b4 55       		.byte	0x55
 1918 00b5 14000000 		.4byte	.LVL26
 1919 00b9 1E000000 		.4byte	.LFE18
 1920 00bd 0100     		.2byte	0x1
 1921 00bf 55       		.byte	0x55
 1922 00c0 00000000 		.4byte	0
 1923 00c4 00000000 		.4byte	0
 1924              	.LLST7:
 1925 00c8 16000000 		.4byte	.LVL29
 1926 00cc 2B000000 		.4byte	.LVL30-1
 1927 00d0 0100     		.2byte	0x1
 1928 00d2 50       		.byte	0x50
 1929 00d3 00000000 		.4byte	0
 1930 00d7 00000000 		.4byte	0
 1931              	.LLST8:
 1932 00db 04000000 		.4byte	.LVL45
 1933 00df 0A000000 		.4byte	.LVL46
 1934 00e3 0100     		.2byte	0x1
 1935 00e5 53       		.byte	0x53
 1936 00e6 0A000000 		.4byte	.LVL46
 1937 00ea 0E000000 		.4byte	.LVL47
 1938 00ee 0600     		.2byte	0x6
 1939 00f0 70       		.byte	0x70
 1940 00f1 00       		.sleb128 0
 1941 00f2 08       		.byte	0x8
 1942 00f3 EF       		.byte	0xef
 1943 00f4 1A       		.byte	0x1a
 1944 00f5 9F       		.byte	0x9f
 1945 00f6 00000000 		.4byte	0
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 56


 1946 00fa 00000000 		.4byte	0
 1947              		.section	.debug_aranges,"",%progbits
 1948 0000 D4000000 		.4byte	0xd4
 1949 0004 0200     		.2byte	0x2
 1950 0006 00000000 		.4byte	.Ldebug_info0
 1951 000a 04       		.byte	0x4
 1952 000b 00       		.byte	0
 1953 000c 0000     		.2byte	0
 1954 000e 0000     		.2byte	0
 1955 0010 00000000 		.4byte	.LFB4
 1956 0014 0C000000 		.4byte	.LFE4-.LFB4
 1957 0018 00000000 		.4byte	.LFB5
 1958 001c 0C000000 		.4byte	.LFE5-.LFB5
 1959 0020 00000000 		.4byte	.LFB1
 1960 0024 40000000 		.4byte	.LFE1-.LFB1
 1961 0028 00000000 		.4byte	.LFB6
 1962 002c 0C000000 		.4byte	.LFE6-.LFB6
 1963 0030 00000000 		.4byte	.LFB7
 1964 0034 0C000000 		.4byte	.LFE7-.LFB7
 1965 0038 00000000 		.4byte	.LFB3
 1966 003c 34000000 		.4byte	.LFE3-.LFB3
 1967 0040 00000000 		.4byte	.LFB8
 1968 0044 0C000000 		.4byte	.LFE8-.LFB8
 1969 0048 00000000 		.4byte	.LFB9
 1970 004c 0C000000 		.4byte	.LFE9-.LFB9
 1971 0050 00000000 		.4byte	.LFB10
 1972 0054 0C000000 		.4byte	.LFE10-.LFB10
 1973 0058 00000000 		.4byte	.LFB11
 1974 005c 0C000000 		.4byte	.LFE11-.LFB11
 1975 0060 00000000 		.4byte	.LFB12
 1976 0064 18000000 		.4byte	.LFE12-.LFB12
 1977 0068 00000000 		.4byte	.LFB13
 1978 006c 0C000000 		.4byte	.LFE13-.LFB13
 1979 0070 00000000 		.4byte	.LFB14
 1980 0074 18000000 		.4byte	.LFE14-.LFB14
 1981 0078 00000000 		.4byte	.LFB15
 1982 007c 24000000 		.4byte	.LFE15-.LFB15
 1983 0080 00000000 		.4byte	.LFB16
 1984 0084 1C000000 		.4byte	.LFE16-.LFB16
 1985 0088 00000000 		.4byte	.LFB17
 1986 008c 24000000 		.4byte	.LFE17-.LFB17
 1987 0090 00000000 		.4byte	.LFB18
 1988 0094 1E000000 		.4byte	.LFE18-.LFB18
 1989 0098 00000000 		.4byte	.LFB19
 1990 009c 3C000000 		.4byte	.LFE19-.LFB19
 1991 00a0 00000000 		.4byte	.LFB0
 1992 00a4 64000000 		.4byte	.LFE0-.LFB0
 1993 00a8 00000000 		.4byte	.LFB2
 1994 00ac 1C000000 		.4byte	.LFE2-.LFB2
 1995 00b0 00000000 		.4byte	.LFB20
 1996 00b4 0C000000 		.4byte	.LFE20-.LFB20
 1997 00b8 00000000 		.4byte	.LFB21
 1998 00bc 0C000000 		.4byte	.LFE21-.LFB21
 1999 00c0 00000000 		.4byte	.LFB22
 2000 00c4 14000000 		.4byte	.LFE22-.LFB22
 2001 00c8 00000000 		.4byte	.LFB23
 2002 00cc 18000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 57


 2003 00d0 00000000 		.4byte	0
 2004 00d4 00000000 		.4byte	0
 2005              		.section	.debug_ranges,"",%progbits
 2006              	.Ldebug_ranges0:
 2007 0000 00000000 		.4byte	.LFB4
 2008 0004 0C000000 		.4byte	.LFE4
 2009 0008 00000000 		.4byte	.LFB5
 2010 000c 0C000000 		.4byte	.LFE5
 2011 0010 00000000 		.4byte	.LFB1
 2012 0014 40000000 		.4byte	.LFE1
 2013 0018 00000000 		.4byte	.LFB6
 2014 001c 0C000000 		.4byte	.LFE6
 2015 0020 00000000 		.4byte	.LFB7
 2016 0024 0C000000 		.4byte	.LFE7
 2017 0028 00000000 		.4byte	.LFB3
 2018 002c 34000000 		.4byte	.LFE3
 2019 0030 00000000 		.4byte	.LFB8
 2020 0034 0C000000 		.4byte	.LFE8
 2021 0038 00000000 		.4byte	.LFB9
 2022 003c 0C000000 		.4byte	.LFE9
 2023 0040 00000000 		.4byte	.LFB10
 2024 0044 0C000000 		.4byte	.LFE10
 2025 0048 00000000 		.4byte	.LFB11
 2026 004c 0C000000 		.4byte	.LFE11
 2027 0050 00000000 		.4byte	.LFB12
 2028 0054 18000000 		.4byte	.LFE12
 2029 0058 00000000 		.4byte	.LFB13
 2030 005c 0C000000 		.4byte	.LFE13
 2031 0060 00000000 		.4byte	.LFB14
 2032 0064 18000000 		.4byte	.LFE14
 2033 0068 00000000 		.4byte	.LFB15
 2034 006c 24000000 		.4byte	.LFE15
 2035 0070 00000000 		.4byte	.LFB16
 2036 0074 1C000000 		.4byte	.LFE16
 2037 0078 00000000 		.4byte	.LFB17
 2038 007c 24000000 		.4byte	.LFE17
 2039 0080 00000000 		.4byte	.LFB18
 2040 0084 1E000000 		.4byte	.LFE18
 2041 0088 00000000 		.4byte	.LFB19
 2042 008c 3C000000 		.4byte	.LFE19
 2043 0090 00000000 		.4byte	.LFB0
 2044 0094 64000000 		.4byte	.LFE0
 2045 0098 00000000 		.4byte	.LFB2
 2046 009c 1C000000 		.4byte	.LFE2
 2047 00a0 00000000 		.4byte	.LFB20
 2048 00a4 0C000000 		.4byte	.LFE20
 2049 00a8 00000000 		.4byte	.LFB21
 2050 00ac 0C000000 		.4byte	.LFE21
 2051 00b0 00000000 		.4byte	.LFB22
 2052 00b4 14000000 		.4byte	.LFE22
 2053 00b8 00000000 		.4byte	.LFB23
 2054 00bc 18000000 		.4byte	.LFE23
 2055 00c0 00000000 		.4byte	0
 2056 00c4 00000000 		.4byte	0
 2057              		.section	.debug_line,"",%progbits
 2058              	.Ldebug_line0:
 2059 0000 4D020000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 58


 2059      02005D00 
 2059      00000201 
 2059      FB0E0D00 
 2059      01010101 
 2060              	.LASF18:
 2061 0000 5350495F 		.ascii	"SPI_EnableTxInt\000"
 2061      456E6162 
 2061      6C655478 
 2061      496E7400 
 2062              	.LASF61:
 2063 0010 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPI.c\000"
 2063      72617465 
 2063      645F536F 
 2063      75726365 
 2063      5C50536F 
 2064              	.LASF55:
 2065 002d 43794578 		.ascii	"CyExitCriticalSection\000"
 2065      69744372 
 2065      69746963 
 2065      616C5365 
 2065      6374696F 
 2066              	.LASF35:
 2067 0043 5350495F 		.ascii	"SPI_GetRxBufferSize\000"
 2067      47657452 
 2067      78427566 
 2067      66657253 
 2067      697A6500 
 2068              	.LASF50:
 2069 0057 5350495F 		.ascii	"SPI_ReadStatus\000"
 2069      52656164 
 2069      53746174 
 2069      757300
 2070              	.LASF45:
 2071 0066 5350495F 		.ascii	"SPI_Init\000"
 2071      496E6974 
 2071      00
 2072              	.LASF40:
 2073 006f 5350495F 		.ascii	"SPI_PutArray\000"
 2073      50757441 
 2073      72726179 
 2073      00
 2074              	.LASF38:
 2075 007c 5350495F 		.ascii	"SPI_ClearRxBuffer\000"
 2075      436C6561 
 2075      72527842 
 2075      75666665 
 2075      7200
 2076              	.LASF7:
 2077 008e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2077      206C6F6E 
 2077      6720756E 
 2077      7369676E 
 2077      65642069 
 2078              	.LASF28:
 2079 00a5 746D7053 		.ascii	"tmpStatus\000"
 2079      74617475 
 2079      7300
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 59


 2080              	.LASF6:
 2081 00af 6C6F6E67 		.ascii	"long long int\000"
 2081      206C6F6E 
 2081      6720696E 
 2081      7400
 2082              	.LASF0:
 2083 00bd 7369676E 		.ascii	"signed char\000"
 2083      65642063 
 2083      68617200 
 2084              	.LASF4:
 2085 00c9 6C6F6E67 		.ascii	"long int\000"
 2085      20696E74 
 2085      00
 2086              	.LASF48:
 2087 00d2 5350495F 		.ascii	"SPI_DisableInt\000"
 2087      44697361 
 2087      626C6549 
 2087      6E7400
 2088              	.LASF9:
 2089 00e1 75696E74 		.ascii	"uint8\000"
 2089      3800
 2090              	.LASF12:
 2091 00e7 646F7562 		.ascii	"double\000"
 2091      6C6500
 2092              	.LASF21:
 2093 00ee 5350495F 		.ascii	"SPI_DisableRxInt\000"
 2093      44697361 
 2093      626C6552 
 2093      78496E74 
 2093      00
 2094              	.LASF44:
 2095 00ff 5350495F 		.ascii	"SPI_ClearFIFO\000"
 2095      436C6561 
 2095      72464946 
 2095      4F00
 2096              	.LASF10:
 2097 010d 75696E74 		.ascii	"uint32\000"
 2097      333200
 2098              	.LASF62:
 2099 0114 453A5C61 		.ascii	"E:\\aquadoc\\psoc\\psoc\\ds1722_test.cydsn\000"
 2099      71756164 
 2099      6F635C70 
 2099      736F635C 
 2099      70736F63 
 2100              	.LASF8:
 2101 013b 756E7369 		.ascii	"unsigned int\000"
 2101      676E6564 
 2101      20696E74 
 2101      00
 2102              	.LASF5:
 2103 0148 6C6F6E67 		.ascii	"long unsigned int\000"
 2103      20756E73 
 2103      69676E65 
 2103      6420696E 
 2103      7400
 2104              	.LASF54:
 2105 015a 4379456E 		.ascii	"CyEnterCriticalSection\000"
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 60


 2105      74657243 
 2105      72697469 
 2105      63616C53 
 2105      65637469 
 2106              	.LASF36:
 2107 0171 73697A65 		.ascii	"size\000"
 2107      00
 2108              	.LASF3:
 2109 0176 73686F72 		.ascii	"short unsigned int\000"
 2109      7420756E 
 2109      7369676E 
 2109      65642069 
 2109      6E7400
 2110              	.LASF59:
 2111 0189 4379496E 		.ascii	"CyIntSetVector\000"
 2111      74536574 
 2111      56656374 
 2111      6F7200
 2112              	.LASF43:
 2113 0198 62756649 		.ascii	"bufIndex\000"
 2113      6E646578 
 2113      00
 2114              	.LASF27:
 2115 01a1 696E7453 		.ascii	"intSrc\000"
 2115      726300
 2116              	.LASF56:
 2117 01a8 5350495F 		.ascii	"SPI_IntClock_Start\000"
 2117      496E7443 
 2117      6C6F636B 
 2117      5F537461 
 2117      727400
 2118              	.LASF37:
 2119 01bb 5350495F 		.ascii	"SPI_GetTxBufferSize\000"
 2119      47657454 
 2119      78427566 
 2119      66657253 
 2119      697A6500 
 2120              	.LASF49:
 2121 01cf 5350495F 		.ascii	"SPI_SetInterruptMode\000"
 2121      53657449 
 2121      6E746572 
 2121      72757074 
 2121      4D6F6465 
 2122              	.LASF47:
 2123 01e4 5350495F 		.ascii	"SPI_EnableInt\000"
 2123      456E6162 
 2123      6C65496E 
 2123      7400
 2124              	.LASF15:
 2125 01f2 72656733 		.ascii	"reg32\000"
 2125      3200
 2126              	.LASF29:
 2127 01f8 5350495F 		.ascii	"SPI_ReadTxStatus\000"
 2127      52656164 
 2127      54785374 
 2127      61747573 
 2127      00
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 61


 2128              	.LASF20:
 2129 0209 5350495F 		.ascii	"SPI_DisableTxInt\000"
 2129      44697361 
 2129      626C6554 
 2129      78496E74 
 2129      00
 2130              	.LASF17:
 2131 021a 73697A65 		.ascii	"sizetype\000"
 2131      74797065 
 2131      00
 2132              	.LASF51:
 2133 0223 5350495F 		.ascii	"SPI_initVar\000"
 2133      696E6974 
 2133      56617200 
 2134              	.LASF16:
 2135 022f 6C6F6E67 		.ascii	"long double\000"
 2135      20646F75 
 2135      626C6500 
 2136              	.LASF31:
 2137 023b 5350495F 		.ascii	"SPI_WriteTxData\000"
 2137      57726974 
 2137      65547844 
 2137      61746100 
 2138              	.LASF58:
 2139 024b 4379496E 		.ascii	"CyIntSetPriority\000"
 2139      74536574 
 2139      5072696F 
 2139      72697479 
 2139      00
 2140              	.LASF11:
 2141 025c 666C6F61 		.ascii	"float\000"
 2141      7400
 2142              	.LASF46:
 2143 0262 5350495F 		.ascii	"SPI_Start\000"
 2143      53746172 
 2143      7400
 2144              	.LASF14:
 2145 026c 72656738 		.ascii	"reg8\000"
 2145      00
 2146              	.LASF1:
 2147 0271 756E7369 		.ascii	"unsigned char\000"
 2147      676E6564 
 2147      20636861 
 2147      7200
 2148              	.LASF23:
 2149 027f 5350495F 		.ascii	"SPI_Stop\000"
 2149      53746F70 
 2149      00
 2150              	.LASF2:
 2151 0288 73686F72 		.ascii	"short int\000"
 2151      7420696E 
 2151      7400
 2152              	.LASF57:
 2153 0292 5350495F 		.ascii	"SPI_IntClock_Stop\000"
 2153      496E7443 
 2153      6C6F636B 
 2153      5F53746F 
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 62


 2153      7000
 2154              	.LASF60:
 2155 02a4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2155      43313120 
 2155      352E342E 
 2155      31203230 
 2155      31363036 
 2156 02d7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2156      20726576 
 2156      6973696F 
 2156      6E203233 
 2156      37373135 
 2157 030a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2157      66756E63 
 2157      74696F6E 
 2157      2D736563 
 2157      74696F6E 
 2158              	.LASF42:
 2159 0332 62797465 		.ascii	"byteCount\000"
 2159      436F756E 
 2159      7400
 2160              	.LASF26:
 2161 033c 5350495F 		.ascii	"SPI_SetRxInterruptMode\000"
 2161      53657452 
 2161      78496E74 
 2161      65727275 
 2161      70744D6F 
 2162              	.LASF53:
 2163 0353 5350495F 		.ascii	"SPI_swStatusRx\000"
 2163      73775374 
 2163      61747573 
 2163      527800
 2164              	.LASF34:
 2165 0362 72784461 		.ascii	"rxData\000"
 2165      746100
 2166              	.LASF19:
 2167 0369 5350495F 		.ascii	"SPI_EnableRxInt\000"
 2167      456E6162 
 2167      6C655278 
 2167      496E7400 
 2168              	.LASF39:
 2169 0379 5350495F 		.ascii	"SPI_ClearTxBuffer\000"
 2169      436C6561 
 2169      72547842 
 2169      75666665 
 2169      7200
 2170              	.LASF13:
 2171 038b 63686172 		.ascii	"char\000"
 2171      00
 2172              	.LASF30:
 2173 0390 5350495F 		.ascii	"SPI_ReadRxStatus\000"
 2173      52656164 
 2173      52785374 
 2173      61747573 
 2173      00
 2174              	.LASF41:
 2175 03a1 62756666 		.ascii	"buffer\000"
ARM GAS  C:\Users\TYROLY~1\AppData\Local\Temp\ccrSrN5Q.s 			page 63


 2175      657200
 2176              	.LASF24:
 2177 03a8 656E6162 		.ascii	"enableInterrupts\000"
 2177      6C65496E 
 2177      74657272 
 2177      75707473 
 2177      00
 2178              	.LASF33:
 2179 03b9 5350495F 		.ascii	"SPI_ReadRxData\000"
 2179      52656164 
 2179      52784461 
 2179      746100
 2180              	.LASF22:
 2181 03c8 5350495F 		.ascii	"SPI_Enable\000"
 2181      456E6162 
 2181      6C6500
 2182              	.LASF25:
 2183 03d3 5350495F 		.ascii	"SPI_SetTxInterruptMode\000"
 2183      53657454 
 2183      78496E74 
 2183      65727275 
 2183      70744D6F 
 2184              	.LASF32:
 2185 03ea 74784461 		.ascii	"txData\000"
 2185      746100
 2186              	.LASF52:
 2187 03f1 5350495F 		.ascii	"SPI_swStatusTx\000"
 2187      73775374 
 2187      61747573 
 2187      547800
 2188              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
